{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP\\\\Student_Mentoring_System-main\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\chat\\\\chatModal\\\\ChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createChat } from \"../../../../../../actions/chat\";\nimport ChatTiles from \"./ChatTiles\";\nimport Plus from \"../../../../../../assets/icons/Plus\";\nimport { studentGetAllStudentsOfMentor } from \"../../../../../../actions/student\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { Roles } from \"../../../../../../utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatModal = ({\n  setShowModal,\n  nodeRef\n}) => {\n  _s();\n\n  // state variable to store the fetched mentees from the api\n  const [myMentees, setMyMentees] = useState([]); // accesing global state to fetch the chats\n\n  const {\n    chats\n  } = useSelector(state => state.chat);\n  const {\n    mentees\n  } = useSelector(state => state.mentor);\n  const dispatch = useDispatch();\n  const history = useHistory(); // state variable to store the chat ids of the selected mentees\n\n  const [chatIds, setChatIds] = useState({\n    chats: []\n  });\n  const {\n    role\n  } = useContext(authContext); // useEffect as component did mount to fetch the mentee for the mentor\n\n  useEffect(() => {\n    // checking to see if the logged in user in student or mentor\n    if (role === Roles.STUDENT) dispatch(studentGetAllStudentsOfMentor(history, setMyMentees));else setMyMentees(mentees);\n  }, [dispatch, history, role]); // function to add and remove the chat ids from the state variable chatIds\n\n  const handleChange = e => {\n    const checked = e.target.checked;\n    const id = e.target.id;\n\n    if (checked) {\n      setChatIds({\n        chats: [...chatIds.chats, id]\n      });\n    } else {\n      const newChatIds = chatIds.chats.filter(chatid => chatid !== id);\n      setChatIds({\n        chats: newChatIds\n      });\n    }\n  }; // function to submit the chatIds to the api for creation of new chats\n\n\n  const handleSubmit = () => {\n    dispatch(createChat(history, setShowModal, chatIds));\n  };\n\n  console.log(\"users\", mentees);\n  console.log(\"chatIds\", chatIds);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full bg-transparent absolute top-0 left-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: nodeRef,\n        className: \"max-h-500 overflow-y-auto max-w-7xl z-50 p-6 bg-white rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mr-5\",\n            children: \"Create a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowModal(false);\n            },\n            className: \"text-2xl\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Selected - \", chatIds.chats.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center flex-wrap justify-start gap-x-3\",\n          children: myMentees.map(mentee => {\n            if (chats.find(chat => chat.users.find(user => user.user._id.toString() === mentee._id.toString())) === undefined) {\n              return /*#__PURE__*/_jsxDEV(ChatTiles, {\n                mentee: mentee,\n                handleChange: handleChange\n              }, mentee._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {}, mentee._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mt-2 flex items-center justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            disabled: chatIds.chats.length === 0 ? true : false,\n            className: \"flex items-center justify-between py-2 px-4 rounded-md bg-blue-600 hover:bg-blue-800 transition-colors text-white disabled:opacity-50\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              alt: false,\n              myStyle: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), \" Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatModal, \"xuKuPOvM+xZxqHD2ezcm1d6nZDQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = ChatModal;\nexport default ChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP/Student_Mentoring_System-main/client/src/components/dashboard/mentorDashboard/dashboardLinks/chat/chatModal/ChatModal.js"],"names":["React","useContext","useEffect","useState","useDispatch","useSelector","useHistory","createChat","ChatTiles","Plus","studentGetAllStudentsOfMentor","authContext","Roles","ChatModal","setShowModal","nodeRef","myMentees","setMyMentees","chats","state","chat","mentees","mentor","dispatch","history","chatIds","setChatIds","role","STUDENT","handleChange","e","checked","target","id","newChatIds","filter","chatid","handleSubmit","console","log","length","map","mentee","find","users","user","_id","toString","undefined"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createChat } from \"../../../../../../actions/chat\";\nimport ChatTiles from \"./ChatTiles\";\n\nimport Plus from \"../../../../../../assets/icons/Plus\";\nimport { studentGetAllStudentsOfMentor } from \"../../../../../../actions/student\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { Roles } from \"../../../../../../utility\";\n\nconst ChatModal = ({ setShowModal, nodeRef }) => {\n    // state variable to store the fetched mentees from the api\n    const [myMentees, setMyMentees] = useState([]);\n\n    // accesing global state to fetch the chats\n    const { chats } = useSelector((state) => state.chat);\n    const { mentees } = useSelector((state) => state.mentor);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // state variable to store the chat ids of the selected mentees\n    const [chatIds, setChatIds] = useState({ chats: [] });\n\n    const { role } = useContext(authContext);\n\n    // useEffect as component did mount to fetch the mentee for the mentor\n    useEffect(() => {\n        // checking to see if the logged in user in student or mentor\n        if (role === Roles.STUDENT) dispatch(studentGetAllStudentsOfMentor(history, setMyMentees));\n        else setMyMentees(mentees);\n    }, [dispatch, history, role]);\n\n    // function to add and remove the chat ids from the state variable chatIds\n    const handleChange = (e) => {\n        const checked = e.target.checked;\n        const id = e.target.id;\n        if (checked) {\n            setChatIds({ chats: [...chatIds.chats, id] });\n        } else {\n            const newChatIds = chatIds.chats.filter((chatid) => chatid !== id);\n            setChatIds({ chats: newChatIds });\n        }\n    };\n\n    // function to submit the chatIds to the api for creation of new chats\n    const handleSubmit = () => {\n        dispatch(createChat(history, setShowModal, chatIds));\n    };\n\n    console.log(\"users\", mentees);\n    console.log(\"chatIds\", chatIds);\n\n    return (\n        <>\n            <div className=\"w-full h-full bg-transparent absolute top-0 left-0 flex items-center justify-center\">\n                <div\n                    ref={nodeRef}\n                    className=\"max-h-500 overflow-y-auto max-w-7xl z-50 p-6 bg-white rounded-md\"\n                >\n                    <div className=\"flex items-center justify-between mb-3\">\n                        <h4 className=\"mr-5\">Create a chat</h4>\n                        <button\n                            onClick={() => {\n                                setShowModal(false);\n                            }}\n                            className=\"text-2xl\"\n                        >\n                            &times;\n                        </button>\n                    </div>\n\n                    <div className=\"mb-2\">\n                        <h5>Selected - {chatIds.chats.length}</h5>\n                    </div>\n\n                    <div className=\"flex items-center flex-wrap justify-start gap-x-3\">\n                        {myMentees.map((mentee) => {\n                            if (\n                                chats.find((chat) =>\n                                    chat.users.find(\n                                        (user) => user.user._id.toString() === mentee._id.toString()\n                                    )\n                                ) === undefined\n                            ) {\n                                return (\n                                    <ChatTiles\n                                        key={mentee._id}\n                                        mentee={mentee}\n                                        handleChange={handleChange}\n                                    />\n                                );\n                            }\n                            return <div key={mentee._id}></div>;\n                        })}\n                    </div>\n\n                    <div className=\"w-full mt-2 flex items-center justify-end\">\n                        <button\n                            onClick={handleSubmit}\n                            disabled={chatIds.chats.length === 0 ? true : false}\n                            className=\"flex items-center justify-between py-2 px-4 rounded-md bg-blue-600 hover:bg-blue-800 transition-colors text-white disabled:opacity-50\"\n                        >\n                            <Plus alt={false} myStyle={\"h-5 w-5 mr-2\"} /> Create\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ChatModal;\n"]},"metadata":{},"sourceType":"module"}
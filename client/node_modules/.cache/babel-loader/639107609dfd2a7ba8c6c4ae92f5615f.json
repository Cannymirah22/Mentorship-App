{"ast":null,"code":"import * as api from \"../api/student\";\nimport { updateProfilePicutre, deleteProfilePicutre } from \"../api/profilePicture\";\nimport { showToast } from \"../components/toast/toast\";\nimport { toast } from \"react-toastify\";\nexport const studentSignIn = (fields, history) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(fields);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"SIGN_IN_STUDENT\",\n        data\n      });\n      history.push(\"/mentee/dashboard\");\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.TOP_RIGHT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentSignUp = (fields, handleToggle) => async dispatch => {\n  const handleActions = () => {\n    handleToggle();\n    showToast(\"info\", \"We have sent a verification email to the registered email id, please verify before login\", false);\n  };\n\n  try {\n    const {\n      data\n    } = await api.signUp(fields);\n    console.log(\"student sign up data\", data);\n\n    if (data.code === 200) {\n      showToast(\"success\", data.msg + \", redirecting to login\", 3000, toast.POSITION.TOP_RIGHT, handleActions);\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.TOP_RIGHT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentGetDetails = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStudent();\n    console.log(\"student data in actions\", data);\n\n    if (data.code === 200) {\n      return dispatch({\n        type: \"FETCH_STUDENT\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentGetProfileDetails = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStudentProfile();\n    console.log(\"student profile data in actions\", data);\n\n    if (data.code === 200) {\n      return dispatch({\n        type: \"FETCH_PROFILE\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentUpdateProfileDetails = (history, fields) => async dispatch => {\n  try {\n    console.log(\"from actions\", fields);\n    const {\n      data\n    } = await api.updateStudentProfile(fields);\n    console.log(\"student profile data in actions from update\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"FETCH_PROFILE\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentUpdateProfilePicture = (history, image) => async dispatch => {\n  try {\n    const {\n      data\n    } = await updateProfilePicutre(image);\n    console.log(\"student profile picture data in actions\", data);\n\n    if (data.code === 200) {\n      // again calling fetch student profile so that we get the updated avatar url\n      dispatch(studentGetProfileDetails());\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentDeleteProfilePicture = history => async dispatch => {\n  try {\n    const {\n      data\n    } = await deleteProfilePicutre();\n    console.log(\"student deleted profile picture data in actions\", data);\n\n    if (data.code === 200) {\n      // again calling fetch student profile so that we get the updated avatar url\n      dispatch(studentGetProfileDetails());\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentGetSemesterDetails = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStudentSemesterDetails();\n    console.log(\"student semester data in actions from get\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"SAVE_SEM_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentAddSemesterDetails = (history, fields, setIsLoading) => async dispatch => {\n  try {\n    console.log(\"in actions for semdetails\", fields);\n    const {\n      data\n    } = await api.addStudentSemesterDetails(fields);\n    console.log(\"student semester data in actions from add\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"ADD_SEM_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n\n    setIsLoading(false);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentUpdateSemesterDetails = (history, fields) => async dispatch => {\n  try {\n    console.log(\"in actions for semdetails\", fields);\n    const {\n      data\n    } = await api.updateStudentSemesterDetails(fields);\n    console.log(\"student semester data in actions from update\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"UPDATE_SEM_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentDeleteSemesterDetails = (history, fields) => async dispatch => {\n  try {\n    console.log(\"in actions for semdetails\", fields);\n    const {\n      data\n    } = await api.deleteStudentSemesterDetails(fields);\n    console.log(\"student semester data in actions from delete\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"DELETE_SEM_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentGetPastEduDetails = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentPastEduDetails();\n    console.log(\"student past edu data in actions from get\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"SAVE_PAST_EDU_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentUpdatePastEduDetails = (history, fields) => async dispatch => {\n  try {\n    console.log(\"in actions for pastEduDetails\", fields);\n    const {\n      data\n    } = await api.updateStudentPastEduDetails(fields);\n    console.log(\"student past edu data in actions from update\", data);\n\n    if (data.code === 200) {\n      dispatch({\n        type: \"SAVE_PAST_EDU_DATA\",\n        data\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const studentGetAllStudentsOfMentor = (history, setMyMentees) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentsOfMentor();\n    console.log(\"students of mentor\", data);\n\n    if (data.code === 200) {\n      setMyMentees(data.data.students);\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logoutStudent = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"LOGOUT_STUDENT\"\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/sweet/Desktop/STEPuHP App Dev opp/client/src/actions/student.js"],"names":["api","updateProfilePicutre","deleteProfilePicutre","showToast","toast","studentSignIn","fields","history","dispatch","data","signIn","code","type","push","msg","POSITION","TOP_RIGHT","error","console","log","studentSignUp","handleToggle","handleActions","signUp","studentGetDetails","fetchStudent","BOTTOM_LEFT","studentGetProfileDetails","fetchStudentProfile","studentUpdateProfileDetails","updateStudentProfile","studentUpdateProfilePicture","image","studentDeleteProfilePicture","studentGetSemesterDetails","fetchStudentSemesterDetails","studentAddSemesterDetails","setIsLoading","addStudentSemesterDetails","studentUpdateSemesterDetails","updateStudentSemesterDetails","studentDeleteSemesterDetails","deleteStudentSemesterDetails","studentGetPastEduDetails","getStudentPastEduDetails","studentUpdatePastEduDetails","updateStudentPastEduDetails","studentGetAllStudentsOfMentor","setMyMentees","getStudentsOfMentor","students","logoutStudent"],"mappings":"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","sourcesContent":["import * as api from \"../api/student\";\nimport { updateProfilePicutre, deleteProfilePicutre } from \"../api/profilePicture\";\nimport { showToast } from \"../components/toast/toast\";\nimport { toast } from \"react-toastify\";\n\nexport const studentSignIn = (fields, history) => async (dispatch) => {\n    try {\n        const { data } = await api.signIn(fields);\n        if (data.code === 200) {\n            dispatch({ type: \"SIGN_IN_STUDENT\", data });\n            history.push(\"/mentee/dashboard\");\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.TOP_RIGHT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentSignUp = (fields, handleToggle) => async (dispatch) => {\n    const handleActions = () => {\n        handleToggle();\n        showToast(\n            \"info\",\n            \"We have sent a verification email to the registered email id, please verify before login\",\n            false\n        );\n    };\n    try {\n        const { data } = await api.signUp(fields);\n        console.log(\"student sign up data\", data);\n        if (data.code === 200) {\n            showToast(\n                \"success\",\n                data.msg + \", redirecting to login\",\n                3000,\n                toast.POSITION.TOP_RIGHT,\n                handleActions\n            );\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.TOP_RIGHT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentGetDetails = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchStudent();\n        console.log(\"student data in actions\", data);\n\n        if (data.code === 200) {\n            return dispatch({ type: \"FETCH_STUDENT\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentGetProfileDetails = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchStudentProfile();\n        console.log(\"student profile data in actions\", data);\n\n        if (data.code === 200) {\n            return dispatch({ type: \"FETCH_PROFILE\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentUpdateProfileDetails = (history, fields) => async (dispatch) => {\n    try {\n        console.log(\"from actions\", fields);\n        const { data } = await api.updateStudentProfile(fields);\n        console.log(\"student profile data in actions from update\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"FETCH_PROFILE\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentUpdateProfilePicture = (history, image) => async (dispatch) => {\n    try {\n        const { data } = await updateProfilePicutre(image);\n        console.log(\"student profile picture data in actions\", data);\n\n        if (data.code === 200) {\n            // again calling fetch student profile so that we get the updated avatar url\n            dispatch(studentGetProfileDetails());\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentDeleteProfilePicture = (history) => async (dispatch) => {\n    try {\n        const { data } = await deleteProfilePicutre();\n        console.log(\"student deleted profile picture data in actions\", data);\n\n        if (data.code === 200) {\n            // again calling fetch student profile so that we get the updated avatar url\n            dispatch(studentGetProfileDetails());\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentGetSemesterDetails = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchStudentSemesterDetails();\n        console.log(\"student semester data in actions from get\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"SAVE_SEM_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentAddSemesterDetails = (history, fields, setIsLoading) => async (dispatch) => {\n    try {\n        console.log(\"in actions for semdetails\", fields);\n        const { data } = await api.addStudentSemesterDetails(fields);\n        console.log(\"student semester data in actions from add\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"ADD_SEM_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n        setIsLoading(false);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentUpdateSemesterDetails = (history, fields) => async (dispatch) => {\n    try {\n        console.log(\"in actions for semdetails\", fields);\n        const { data } = await api.updateStudentSemesterDetails(fields);\n        console.log(\"student semester data in actions from update\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"UPDATE_SEM_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentDeleteSemesterDetails = (history, fields) => async (dispatch) => {\n    try {\n        console.log(\"in actions for semdetails\", fields);\n        const { data } = await api.deleteStudentSemesterDetails(fields);\n        console.log(\"student semester data in actions from delete\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"DELETE_SEM_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentGetPastEduDetails = () => async (dispatch) => {\n    try {\n        const { data } = await api.getStudentPastEduDetails();\n        console.log(\"student past edu data in actions from get\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"SAVE_PAST_EDU_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentUpdatePastEduDetails = (history, fields) => async (dispatch) => {\n    try {\n        console.log(\"in actions for pastEduDetails\", fields);\n        const { data } = await api.updateStudentPastEduDetails(fields);\n        console.log(\"student past edu data in actions from update\", data);\n\n        if (data.code === 200) {\n            dispatch({ type: \"SAVE_PAST_EDU_DATA\", data });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const studentGetAllStudentsOfMentor = (history, setMyMentees) => async (dispatch) => {\n    try {\n        const { data } = await api.getStudentsOfMentor();\n        console.log(\"students of mentor\", data);\n\n        if (data.code === 200) {\n            setMyMentees(data.data.students);\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const logoutStudent = () => async (dispatch) => {\n    try {\n        dispatch({ type: \"LOGOUT_STUDENT\" });\n    } catch (error) {\n        console.log(error);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
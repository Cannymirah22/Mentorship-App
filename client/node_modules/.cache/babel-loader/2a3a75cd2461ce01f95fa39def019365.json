{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\academicdetails\\\\AcademicDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PastDetails from \"./pastDetails/PastDetails\";\nimport Semester from \"./semester/Semester\";\nimport AcademicModal from \"./academicModal/AcademicModal\";\nimport { useHistory } from \"react-router\";\nimport SemesterModal from \"./academicModal/SemesterModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { studentGetSemesterDetails, studentAddSemesterDetails, studentGetPastEduDetails } from \"../../../../../actions/student\";\nimport SemesterDelModal from \"./academicModal/SemesterDelModal\";\nimport Loading from \"../../../../loading/Loading\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../../../../modal/ModalOverlay\";\nimport Plus from \"../../../../../assets/icons/Plus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AcademicDetails = () => {\n  _s();\n\n  useEffect(() => {\n    dispatch(studentGetSemesterDetails(history));\n    dispatch(studentGetPastEduDetails(history));\n  }, []); // state variables\n\n  const [semNo, setSemNo] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pastDetails, setPastDetails] = useState({\n    10: {\n      board: \"\",\n      studied: \"\",\n      marks: \"\"\n    },\n    12: {\n      board: \"\",\n      studied: \"\",\n      marks: \"\"\n    }\n  });\n  const [semesterDetails, setSemesterDetails] = useState({\n    semester: 0,\n    courses: []\n  });\n  const [semesterCourses, setSemesterCourses] = useState([]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    semData,\n    pastEducation\n  } = useSelector(state => state.student);\n  console.log(\"semData\", semData);\n  console.log(\"past\", pastEducation); // logic to add semester dynamically\n\n  const mount = useRef();\n  useEffect(() => {\n    // mount is a reference variable that is set true after first time component renders\n    if (!mount.current) {\n      mount.current = true;\n    } else {\n      // if the courses length is 1 that means user is trying to add new semester\n      if (semesterDetails.courses.length === 1 && semesterDetails.courses[0].code === \"\" && semesterDetails.courses[0].title === \"\" && semesterDetails.courses[0].credit === \"\" && semesterDetails.courses[0].type === \"\" && semesterDetails.courses[0].grade === \"\") {\n        dispatch(studentAddSemesterDetails(history, semesterDetails, setIsLoading));\n      }\n    }\n  }, [dispatch, history, semesterDetails]);\n\n  const addSemester = length => {\n    setSemesterDetails({\n      semester: length += 1,\n      courses: [{\n        code: \"\",\n        title: \"\",\n        credit: \"\",\n        type: \"\",\n        grade: \"\"\n      }]\n    });\n    setIsLoading(true);\n  };\n\n  const handleShowModal = () => {\n    setShowModal(true);\n    setShowOverlay(true);\n    setPastDetails({\n      10: {\n        board: pastEducation[\"10\"].board,\n        studied: pastEducation[\"10\"].studied,\n        marks: pastEducation[\"10\"].marks\n      },\n      12: {\n        board: pastEducation[\"12\"].board,\n        studied: pastEducation[\"12\"].studied,\n        marks: pastEducation[\"12\"].marks\n      }\n    });\n  };\n\n  const handleSemesterModal = index => {\n    if (semData.length !== 0) {\n      let tempC = [];\n      semData[index].courses.forEach(course => {\n        let temp = {\n          code: course.code,\n          title: course.title,\n          credit: course.credit,\n          type: course.type,\n          grade: course.grade\n        };\n        tempC.push(temp);\n      });\n      setSemesterCourses([...tempC]);\n    }\n\n    setShowSemesterModal(true);\n    setShowOverlay(true);\n  };\n\n  const handleDelSemModal = () => {\n    setShowOverlay(true);\n    setShowDelModal(true);\n  }; // ref variables\n\n\n  const overlayRef = useRef(null);\n  const academicModalRef = useRef(null);\n  const semesterModalRef = useRef(null);\n  const semesterModalDelRef = useRef(null); // state variables\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showSemesterModal, setShowSemesterModal] = useState(false);\n  const [showDelModal, setShowDelModal] = useState(false);\n  const [overflow, setOverflow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full h-full pt-4 px-4 ${overflow ? \"overflow-y-auto\" : \"overflow-y-hidden\"} `,\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: overlayRef,\n        in: showOverlay,\n        timeout: 300,\n        classNames: \"overlay\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n          nodeRef: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: academicModalRef,\n        in: showModal,\n        timeout: 300,\n        classNames: \"modal\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(AcademicModal, {\n          nodeRef: academicModalRef,\n          setShowOverlay: setShowOverlay,\n          setShowModal: setShowModal,\n          setOverflow: setOverflow,\n          pastDetails: pastDetails,\n          setPastDetails: setPastDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: semesterModalRef,\n        in: showSemesterModal,\n        timeout: 300,\n        classNames: \"modal\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(SemesterModal, {\n          nodeRef: semesterModalRef,\n          setShowOverlay: setShowOverlay,\n          setShowSemesterModal: setShowSemesterModal,\n          setOverflow: setOverflow,\n          semNo: semNo,\n          setSemesterDetails: setSemesterDetails,\n          setSemesterCourses: setSemesterCourses,\n          semesterCourses: semesterCourses,\n          semesterDetails: semesterDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: semesterModalDelRef,\n        in: showDelModal,\n        timeout: 300,\n        classNames: \"modal\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(SemesterDelModal, {\n          semNo: semNo,\n          nodeRef: semesterModalDelRef,\n          setShowOverlay: setShowOverlay,\n          setShowDelModal: setShowDelModal,\n          setOverflow: setOverflow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PastDetails, {\n        handleShowModal: handleShowModal,\n        setOverflow: setOverflow,\n        pastEducation: pastEducation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), semData.map((sem, index) => {\n        return /*#__PURE__*/_jsxDEV(Semester, {\n          semester: sem.semester,\n          courses: sem.courses,\n          index: index,\n          handleSemesterModal: handleSemesterModal,\n          handleDelSemModal: handleDelSemModal,\n          setOverflow: setOverflow,\n          setSemNo: setSemNo,\n          semDataLength: semData.length\n        }, sem._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this);\n      }), semData.length === 10 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addSemester(semData.length),\n        type: \"button\",\n        className: \"rounded-md text-gray-900 bg-gray-200 w-full p-6 disabled:opacity-50 flex justify-center items-center gap-2 mb-2\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {\n          myStyle: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Plus, {\n          alt: true,\n          myStyle: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }, this), \"Add Semester\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AcademicDetails, \"jNTk9i0LgasvCqsSQNFwFnzuvW0=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = AcademicDetails;\nexport default AcademicDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcademicDetails\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/dashboard/mentorDashboard/dashboardLinks/academicdetails/AcademicDetails.js"],"names":["React","useState","useEffect","useRef","PastDetails","Semester","AcademicModal","useHistory","SemesterModal","useDispatch","useSelector","studentGetSemesterDetails","studentAddSemesterDetails","studentGetPastEduDetails","SemesterDelModal","Loading","CSSTransition","ModalOverlay","Plus","AcademicDetails","dispatch","history","semNo","setSemNo","isLoading","setIsLoading","pastDetails","setPastDetails","board","studied","marks","semesterDetails","setSemesterDetails","semester","courses","semesterCourses","setSemesterCourses","semData","pastEducation","state","student","console","log","mount","current","length","code","title","credit","type","grade","addSemester","handleShowModal","setShowModal","setShowOverlay","handleSemesterModal","index","tempC","forEach","course","temp","push","setShowSemesterModal","handleDelSemModal","setShowDelModal","overlayRef","academicModalRef","semesterModalRef","semesterModalDelRef","showOverlay","showModal","showSemesterModal","showDelModal","overflow","setOverflow","map","sem","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport PastDetails from \"./pastDetails/PastDetails\";\nimport Semester from \"./semester/Semester\";\nimport AcademicModal from \"./academicModal/AcademicModal\";\nimport { useHistory } from \"react-router\";\nimport SemesterModal from \"./academicModal/SemesterModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    studentGetSemesterDetails,\n    studentAddSemesterDetails,\n    studentGetPastEduDetails,\n} from \"../../../../../actions/student\";\nimport SemesterDelModal from \"./academicModal/SemesterDelModal\";\nimport Loading from \"../../../../loading/Loading\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../../../../modal/ModalOverlay\";\nimport Plus from \"../../../../../assets/icons/Plus\";\n\nconst AcademicDetails = () => {\n    useEffect(() => {\n        dispatch(studentGetSemesterDetails(history));\n        dispatch(studentGetPastEduDetails(history));\n    }, []);\n\n    // state variables\n    const [semNo, setSemNo] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    const [pastDetails, setPastDetails] = useState({\n        10: {\n            board: \"\",\n            studied: \"\",\n            marks: \"\",\n        },\n        12: {\n            board: \"\",\n            studied: \"\",\n            marks: \"\",\n        },\n    });\n    const [semesterDetails, setSemesterDetails] = useState({\n        semester: 0,\n        courses: [],\n    });\n    const [semesterCourses, setSemesterCourses] = useState([]);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const { semData, pastEducation } = useSelector((state) => state.student);\n\n    console.log(\"semData\", semData);\n    console.log(\"past\", pastEducation);\n\n    // logic to add semester dynamically\n    const mount = useRef();\n\n    useEffect(() => {\n        // mount is a reference variable that is set true after first time component renders\n        if (!mount.current) {\n            mount.current = true;\n        } else {\n            // if the courses length is 1 that means user is trying to add new semester\n            if (\n                semesterDetails.courses.length === 1 &&\n                semesterDetails.courses[0].code === \"\" &&\n                semesterDetails.courses[0].title === \"\" &&\n                semesterDetails.courses[0].credit === \"\" &&\n                semesterDetails.courses[0].type === \"\" &&\n                semesterDetails.courses[0].grade === \"\"\n            ) {\n                dispatch(studentAddSemesterDetails(history, semesterDetails, setIsLoading));\n            }\n        }\n    }, [dispatch, history, semesterDetails]);\n\n    const addSemester = (length) => {\n        setSemesterDetails({\n            semester: (length += 1),\n            courses: [\n                {\n                    code: \"\",\n                    title: \"\",\n                    credit: \"\",\n                    type: \"\",\n                    grade: \"\",\n                },\n            ],\n        });\n        setIsLoading(true);\n    };\n\n    const handleShowModal = () => {\n        setShowModal(true);\n        setShowOverlay(true);\n        setPastDetails({\n            10: {\n                board: pastEducation[\"10\"].board,\n                studied: pastEducation[\"10\"].studied,\n                marks: pastEducation[\"10\"].marks,\n            },\n            12: {\n                board: pastEducation[\"12\"].board,\n                studied: pastEducation[\"12\"].studied,\n                marks: pastEducation[\"12\"].marks,\n            },\n        });\n    };\n\n    const handleSemesterModal = (index) => {\n        if (semData.length !== 0) {\n            let tempC = [];\n            semData[index].courses.forEach((course) => {\n                let temp = {\n                    code: course.code,\n                    title: course.title,\n                    credit: course.credit,\n                    type: course.type,\n                    grade: course.grade,\n                };\n\n                tempC.push(temp);\n            });\n            setSemesterCourses([...tempC]);\n        }\n        setShowSemesterModal(true);\n        setShowOverlay(true);\n    };\n\n    const handleDelSemModal = () => {\n        setShowOverlay(true);\n        setShowDelModal(true);\n    };\n\n    // ref variables\n    const overlayRef = useRef(null);\n    const academicModalRef = useRef(null);\n    const semesterModalRef = useRef(null);\n    const semesterModalDelRef = useRef(null);\n\n    // state variables\n    const [showOverlay, setShowOverlay] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [showSemesterModal, setShowSemesterModal] = useState(false);\n    const [showDelModal, setShowDelModal] = useState(false);\n    const [overflow, setOverflow] = useState(true);\n\n    return (\n        <div className=\"w-full h-full relative\">\n            <div\n                className={`w-full h-full pt-4 px-4 ${\n                    overflow ? \"overflow-y-auto\" : \"overflow-y-hidden\"\n                } `}\n            >\n                <CSSTransition\n                    nodeRef={overlayRef}\n                    in={showOverlay}\n                    timeout={300}\n                    classNames=\"overlay\"\n                    unmountOnExit\n                >\n                    <ModalOverlay nodeRef={overlayRef} />\n                </CSSTransition>\n                <CSSTransition\n                    nodeRef={academicModalRef}\n                    in={showModal}\n                    timeout={300}\n                    classNames=\"modal\"\n                    unmountOnExit\n                >\n                    <AcademicModal\n                        nodeRef={academicModalRef}\n                        setShowOverlay={setShowOverlay}\n                        setShowModal={setShowModal}\n                        setOverflow={setOverflow}\n                        pastDetails={pastDetails}\n                        setPastDetails={setPastDetails}\n                    />\n                </CSSTransition>\n                <CSSTransition\n                    nodeRef={semesterModalRef}\n                    in={showSemesterModal}\n                    timeout={300}\n                    classNames=\"modal\"\n                    unmountOnExit\n                >\n                    <SemesterModal\n                        nodeRef={semesterModalRef}\n                        setShowOverlay={setShowOverlay}\n                        setShowSemesterModal={setShowSemesterModal}\n                        setOverflow={setOverflow}\n                        semNo={semNo}\n                        setSemesterDetails={setSemesterDetails}\n                        setSemesterCourses={setSemesterCourses}\n                        semesterCourses={semesterCourses}\n                        semesterDetails={semesterDetails}\n                    />\n                </CSSTransition>\n                <CSSTransition\n                    nodeRef={semesterModalDelRef}\n                    in={showDelModal}\n                    timeout={300}\n                    classNames=\"modal\"\n                    unmountOnExit\n                >\n                    <SemesterDelModal\n                        semNo={semNo}\n                        nodeRef={semesterModalDelRef}\n                        setShowOverlay={setShowOverlay}\n                        setShowDelModal={setShowDelModal}\n                        setOverflow={setOverflow}\n                    />\n                </CSSTransition>\n\n                <PastDetails\n                    handleShowModal={handleShowModal}\n                    setOverflow={setOverflow}\n                    pastEducation={pastEducation}\n                />\n\n                {semData.map((sem, index) => {\n                    return (\n                        <Semester\n                            key={sem._id}\n                            semester={sem.semester}\n                            courses={sem.courses}\n                            index={index}\n                            handleSemesterModal={handleSemesterModal}\n                            handleDelSemModal={handleDelSemModal}\n                            setOverflow={setOverflow}\n                            setSemNo={setSemNo}\n                            semDataLength={semData.length}\n                        />\n                    );\n                })}\n\n                {semData.length === 10 ? (\n                    <div></div>\n                ) : (\n                    <button\n                        onClick={() => addSemester(semData.length)}\n                        type=\"button\"\n                        className=\"rounded-md text-gray-900 bg-gray-200 w-full p-6 disabled:opacity-50 flex justify-center items-center gap-2 mb-2\"\n                    >\n                        {isLoading ? (\n                            <Loading myStyle={\"w-6 h-6\"} />\n                        ) : (\n                            <Plus alt={true} myStyle={\"w-6 h-6\"} />\n                        )}\n                        Add Semester\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AcademicDetails;\n"]},"metadata":{},"sourceType":"module"}
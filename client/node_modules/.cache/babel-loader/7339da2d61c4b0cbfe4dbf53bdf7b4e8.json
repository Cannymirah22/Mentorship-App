{"ast":null,"code":"const student = (state = {\n  studentData: null,\n  profileData: {},\n  semData: [],\n  pastEducation: {}\n}, action) => {\n  var _action$data, _action$data2;\n\n  switch (action.type) {\n    case \"SIGN_IN_STUDENT\":\n      localStorage.setItem(\"authData\", JSON.stringify({ ...(action === null || action === void 0 ? void 0 : (_action$data = action.data) === null || _action$data === void 0 ? void 0 : _action$data.data)\n      }));\n      return { ...state,\n        studentData: action === null || action === void 0 ? void 0 : (_action$data2 = action.data) === null || _action$data2 === void 0 ? void 0 : _action$data2.data\n      };\n\n    case \"FETCH_STUDENT\":\n      return { ...state,\n        studentData: action.data\n      };\n\n    case \"CONNECT_SOCKET_STUDENT\":\n      return { ...state,\n        socket: action.socket\n      };\n\n    case \"FETCH_PROFILE\":\n      return { ...state,\n        profileData: action.data.data.profileData\n      };\n\n    case \"SAVE_SEM_DATA\":\n      return { ...state,\n        semData: action.data.data.semesters\n      };\n\n    case \"ADD_SEM_DATA\":\n      return { ...state,\n        semData: [...state.semData, action.data.data.semesters]\n      };\n\n    case \"UPDATE_SEM_DATA\":\n      let pos;\n      state.semData.forEach((element, i) => {\n        if (element._id === action.data.data.semesters._id) {\n          pos = i;\n        }\n      });\n      state.semData[pos] = action.data.data.semesters;\n      return { ...state\n      };\n\n    case \"DELETE_SEM_DATA\":\n      let filteredSemesters = [];\n      state.semData.forEach(sem => {\n        if (sem._id !== action.data.data.semester._id) {\n          filteredSemesters.push(sem);\n        }\n      });\n      return { ...state,\n        semData: filteredSemesters\n      };\n\n    case \"SAVE_PAST_EDU_DATA\":\n      return { ...state,\n        pastEducation: action.data.data.pastEducation\n      };\n\n    case \"LOGOUT_STUDENT\":\n      localStorage.clear();\n      return { ...state,\n        studentData: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default student;","map":{"version":3,"sources":["C:/Users/sweet/Desktop/STEPuHP App Dev opp/client/src/reducers/student.js"],"names":["student","state","studentData","profileData","semData","pastEducation","action","type","localStorage","setItem","JSON","stringify","data","socket","semesters","pos","forEach","element","i","_id","filteredSemesters","sem","semester","push","clear"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACZC,KAAK,GAAG;AAAEC,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,WAAW,EAAE,EAAlC;AAAsCC,EAAAA,OAAO,EAAE,EAA/C;AAAmDC,EAAAA,aAAa,EAAE;AAAlE,CADI,EAEZC,MAFY,KAGX;AAAA;;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACIC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe,EAAE,IAAGL,MAAH,aAAGA,MAAH,uCAAGA,MAAM,CAAEM,IAAX,iDAAG,aAAcA,IAAjB;AAAF,OAAf,CAAjC;AACA,aAAO,EAAE,GAAGX,KAAL;AAAYC,QAAAA,WAAW,EAAEI,MAAF,aAAEA,MAAF,wCAAEA,MAAM,CAAEM,IAAV,kDAAE,cAAcA;AAAvC,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAE,GAAGX,KAAL;AAAYC,QAAAA,WAAW,EAAEI,MAAM,CAACM;AAAhC,OAAP;;AACJ,SAAK,wBAAL;AACI,aAAO,EAAE,GAAGX,KAAL;AAAYY,QAAAA,MAAM,EAAEP,MAAM,CAACO;AAA3B,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAE,GAAGZ,KAAL;AAAYE,QAAAA,WAAW,EAAEG,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBT;AAA1C,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAEE,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBE;AAAtC,OAAP;;AACJ,SAAK,cAAL;AACI,aAAO,EAAE,GAAGb,KAAL;AAAYG,QAAAA,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmBE,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBE,SAApC;AAArB,OAAP;;AACJ,SAAK,iBAAL;AACI,UAAIC,GAAJ;AACAd,MAAAA,KAAK,CAACG,OAAN,CAAcY,OAAd,CAAsB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAClC,YAAID,OAAO,CAACE,GAAR,KAAgBb,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBE,SAAjB,CAA2BK,GAA/C,EAAoD;AAChDJ,UAAAA,GAAG,GAAGG,CAAN;AACH;AACJ,OAJD;AAKAjB,MAAAA,KAAK,CAACG,OAAN,CAAcW,GAAd,IAAqBT,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBE,SAAtC;AACA,aAAO,EAAE,GAAGb;AAAL,OAAP;;AACJ,SAAK,iBAAL;AACI,UAAImB,iBAAiB,GAAG,EAAxB;AACAnB,MAAAA,KAAK,CAACG,OAAN,CAAcY,OAAd,CAAuBK,GAAD,IAAS;AAC3B,YAAIA,GAAG,CAACF,GAAJ,KAAYb,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBU,QAAjB,CAA0BH,GAA1C,EAA+C;AAC3CC,UAAAA,iBAAiB,CAACG,IAAlB,CAAuBF,GAAvB;AACH;AACJ,OAJD;AAKA,aAAO,EAAE,GAAGpB,KAAL;AAAYG,QAAAA,OAAO,EAAEgB;AAArB,OAAP;;AACJ,SAAK,oBAAL;AACI,aAAO,EAAE,GAAGnB,KAAL;AAAYI,QAAAA,aAAa,EAAEC,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBP;AAA5C,OAAP;;AACJ,SAAK,gBAAL;AACIG,MAAAA,YAAY,CAACgB,KAAb;AACA,aAAO,EAAE,GAAGvB,KAAL;AAAYC,QAAAA,WAAW,EAAE;AAAzB,OAAP;;AACJ;AACI,aAAOD,KAAP;AArCR;AAuCH,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["const student = (\n    state = { studentData: null, profileData: {}, semData: [], pastEducation: {} },\n    action\n) => {\n    switch (action.type) {\n        case \"SIGN_IN_STUDENT\":\n            localStorage.setItem(\"authData\", JSON.stringify({ ...action?.data?.data }));\n            return { ...state, studentData: action?.data?.data };\n        case \"FETCH_STUDENT\":\n            return { ...state, studentData: action.data };\n        case \"CONNECT_SOCKET_STUDENT\":\n            return { ...state, socket: action.socket };\n        case \"FETCH_PROFILE\":\n            return { ...state, profileData: action.data.data.profileData };\n        case \"SAVE_SEM_DATA\":\n            return { ...state, semData: action.data.data.semesters };\n        case \"ADD_SEM_DATA\":\n            return { ...state, semData: [...state.semData, action.data.data.semesters] };\n        case \"UPDATE_SEM_DATA\":\n            let pos;\n            state.semData.forEach((element, i) => {\n                if (element._id === action.data.data.semesters._id) {\n                    pos = i;\n                }\n            });\n            state.semData[pos] = action.data.data.semesters;\n            return { ...state };\n        case \"DELETE_SEM_DATA\":\n            let filteredSemesters = [];\n            state.semData.forEach((sem) => {\n                if (sem._id !== action.data.data.semester._id) {\n                    filteredSemesters.push(sem);\n                }\n            });\n            return { ...state, semData: filteredSemesters };\n        case \"SAVE_PAST_EDU_DATA\":\n            return { ...state, pastEducation: action.data.data.pastEducation };\n        case \"LOGOUT_STUDENT\":\n            localStorage.clear();\n            return { ...state, studentData: null };\n        default:\n            return state;\n    }\n};\n\nexport default student;\n"]},"metadata":{},"sourceType":"module"}
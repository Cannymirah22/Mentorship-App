{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sweet\\\\Desktop\\\\STEPuHP App Dev opp\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\chat\\\\chatSideBar\\\\SearchChatTile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport DotIcon from \"../../../../../../assets/icons/DotIcon\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchChatTile = ({\n  chat,\n  setChatSelection,\n  thatUser,\n  setCurChat,\n  setTmpList,\n  chats,\n  setVal\n}) => {\n  _s();\n\n  var _thatUser$user, _thatUser$user$avatar, _thatUser$user2, _thatUser$user3, _thatUser$user3$avata, _thatUser$user4, _thatUser$user5, _thatUser$user6, _chat$latestMessage, _chat$latestMessage2;\n\n  // getting uid of the logged in user\n  const {\n    uid\n  } = useContext(authContext);\n  const dispatch = useDispatch(); // accessing global store for the notification array to show notifications\n\n  const {\n    notifications\n  } = useSelector(state => state.chat);\n  console.log(\"notifications\", notifications);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 flex flex-col items-end\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        let id = chat._id.toString();\n\n        let index = chats.findIndex(chat => chat._id.toString() === id);\n\n        if (notifications.includes(chat._id)) {\n          let tmp = notifications.filter(id => id !== chat._id.toString());\n          dispatch({\n            type: \"UPDATE_NOTIFICATION\",\n            tmp\n          });\n        }\n\n        localStorage.setItem(\"0\", index);\n        setChatSelection(chat._id);\n        localStorage.setItem(\"persistChat\", JSON.stringify({\n          chatId: id,\n          chatIndex: index\n        }));\n        let thisChat = chat.users.find(user => user.user._id !== uid);\n        setCurChat({\n          avatar: thisChat.user.avatar.url,\n          name: `${thisChat.user.firstname} ${thisChat.user.middlename} ${thisChat.user.lastname}`\n        });\n        setTmpList([]);\n        setVal(\"\");\n      },\n      className: `grid w-full grid-cols-chatTab p-2 hover:bg-gray-200 cursor-pointer rounded-md transition-all ${\"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"h-12 w-12 rounded-full\",\n        src: (thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user = thatUser.user) === null || _thatUser$user === void 0 ? void 0 : (_thatUser$user$avatar = _thatUser$user.avatar) === null || _thatUser$user$avatar === void 0 ? void 0 : _thatUser$user$avatar.url) === \"\" ? `https://avatars.dicebear.com/api/initials/${thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user2 = thatUser.user) === null || _thatUser$user2 === void 0 ? void 0 : _thatUser$user2.firstname}.svg` : thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user3 = thatUser.user) === null || _thatUser$user3 === void 0 ? void 0 : (_thatUser$user3$avata = _thatUser$user3.avatar) === null || _thatUser$user3$avata === void 0 ? void 0 : _thatUser$user3$avata.url,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full mx-6 flex-col items-start justify-evenly overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `${thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user4 = thatUser.user) === null || _thatUser$user4 === void 0 ? void 0 : _thatUser$user4.firstname} ${thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user5 = thatUser.user) === null || _thatUser$user5 === void 0 ? void 0 : _thatUser$user5.middlename} ${thatUser === null || thatUser === void 0 ? void 0 : (_thatUser$user6 = thatUser.user) === null || _thatUser$user6 === void 0 ? void 0 : _thatUser$user6.lastname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: chat === null || chat === void 0 ? void 0 : (_chat$latestMessage = chat.latestMessage) === null || _chat$latestMessage === void 0 ? void 0 : _chat$latestMessage.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-3 flex flex-col items-center justify-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: moment(chat === null || chat === void 0 ? void 0 : (_chat$latestMessage2 = chat.latestMessage) === null || _chat$latestMessage2 === void 0 ? void 0 : _chat$latestMessage2.createdAt).calendar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), notifications.includes(chat._id) ? /*#__PURE__*/_jsxDEV(DotIcon, {\n          myStyle: \"h-3 w-3 bg-green-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-5/6 h-px bg-gray-200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchChatTile, \"3HBYxtS/oFG/Dte9tJQyYSyuvO4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchChatTile;\nexport default SearchChatTile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchChatTile\");","map":{"version":3,"sources":["C:/Users/sweet/Desktop/STEPuHP App Dev opp/client/src/components/dashboard/mentorDashboard/dashboardLinks/chat/chatSideBar/SearchChatTile.js"],"names":["React","useContext","DotIcon","moment","useDispatch","useSelector","authContext","SearchChatTile","chat","setChatSelection","thatUser","setCurChat","setTmpList","chats","setVal","uid","dispatch","notifications","state","console","log","id","_id","toString","index","findIndex","includes","tmp","filter","type","localStorage","setItem","JSON","stringify","chatId","chatIndex","thisChat","users","find","user","avatar","url","name","firstname","middlename","lastname","latestMessage","content","createdAt","calendar"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport DotIcon from \"../../../../../../assets/icons/DotIcon\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\n\nconst SearchChatTile = ({\n    chat,\n    setChatSelection,\n    thatUser,\n    setCurChat,\n    setTmpList,\n    chats,\n    setVal,\n}) => {\n    // getting uid of the logged in user\n    const { uid } = useContext(authContext);\n\n    const dispatch = useDispatch();\n\n    // accessing global store for the notification array to show notifications\n    const { notifications } = useSelector((state) => state.chat);\n\n    console.log(\"notifications\", notifications);\n\n    return (\n        <div className=\"mb-4 flex flex-col items-end\">\n            <div\n                onClick={() => {\n                    let id = chat._id.toString();\n                    let index = chats.findIndex((chat) => chat._id.toString() === id);\n\n                    if (notifications.includes(chat._id)) {\n                        let tmp = notifications.filter((id) => id !== chat._id.toString());\n                        dispatch({ type: \"UPDATE_NOTIFICATION\", tmp });\n                    }\n\n                    localStorage.setItem(\"0\", index);\n                    setChatSelection(chat._id);\n                    localStorage.setItem(\n                        \"persistChat\",\n                        JSON.stringify({\n                            chatId: id,\n                            chatIndex: index,\n                        })\n                    );\n                    let thisChat = chat.users.find((user) => user.user._id !== uid);\n                    setCurChat({\n                        avatar: thisChat.user.avatar.url,\n                        name: `${thisChat.user.firstname} ${thisChat.user.middlename} ${thisChat.user.lastname}`,\n                    });\n                    setTmpList([]);\n                    setVal(\"\");\n                }}\n                className={`grid w-full grid-cols-chatTab p-2 hover:bg-gray-200 cursor-pointer rounded-md transition-all ${\"\"}`}\n            >\n                <img\n                    className=\"h-12 w-12 rounded-full\"\n                    src={\n                        thatUser?.user?.avatar?.url === \"\"\n                            ? `https://avatars.dicebear.com/api/initials/${thatUser?.user?.firstname}.svg`\n                            : thatUser?.user?.avatar?.url\n                    }\n                    alt=\"img\"\n                />\n                <div className=\"flex w-full mx-6 flex-col items-start justify-evenly overflow-hidden\">\n                    <h3>{`${thatUser?.user?.firstname} ${thatUser?.user?.middlename} ${thatUser?.user?.lastname}`}</h3>\n                    <h6>{chat?.latestMessage?.content}</h6>\n                </div>\n                <div className=\"px-3 flex flex-col items-center justify-evenly\">\n                    <h6>{moment(chat?.latestMessage?.createdAt).calendar()}</h6>\n                    {notifications.includes(chat._id) ? (\n                        <DotIcon myStyle={\"h-3 w-3 bg-green-500 rounded-full\"} />\n                    ) : (\n                        <div></div>\n                    )}\n                </div>\n            </div>\n            <div className=\"w-5/6 h-px bg-gray-200\"></div>\n        </div>\n    );\n};\n\nexport default SearchChatTile;\n"]},"metadata":{},"sourceType":"module"}
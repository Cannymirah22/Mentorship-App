{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP\\\\Student_Mentoring_System-main\\\\client\\\\src\\\\components\\\\notification\\\\NotificationCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { authContext } from \"../../contexts/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationCounter = () => {\n  _s();\n\n  // getting uid of the logged in user\n  const {\n    uid\n  } = useContext(authContext); // accessing the global notification store\n\n  const {\n    notifications\n  } = useSelector(state => state.notification);\n  console.log(\"notifications in counter\", notifications); // function to find the no. of unread notifications\n\n  useEffect(() => {\n    let count = 0;\n\n    if (notifications && notifications.length > 0) {\n      notifications.forEach(notification => {\n        // console.log(notification.receivers.find((r) => r.user._id === uid));\n        if (notification.receivers.find(receiver => receiver.user._id.toString() === uid.toString()).read === false) {\n          count++;\n        }\n      });\n      setReadNotifications(count);\n    }\n  }, [notifications, uid]); // state to manage the unread notification count\n\n  const [readNotifications, setReadNotifications] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: readNotifications > 0 ? /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: `bg-red-500 text-center w-6 h-6 rounded-full text-white flex items-center justify-center absolute -top-1 right-0 ${readNotifications > 99 ? \"text-xs\" : \"\"}`,\n      children: readNotifications > 99 ? \"99+\" : readNotifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s(NotificationCounter, \"qxS9Kl93UBWl1uZU56fftCac3+4=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationCounter;\nexport default NotificationCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationCounter\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP/Student_Mentoring_System-main/client/src/components/notification/NotificationCounter.js"],"names":["React","useContext","useEffect","useState","useSelector","authContext","NotificationCounter","uid","notifications","state","notification","console","log","count","length","forEach","receivers","find","receiver","user","_id","toString","read","setReadNotifications","readNotifications"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUN,UAAU,CAACI,WAAD,CAA1B,CAF8B,CAI9B;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAoBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAArC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,aAAxC,EAP8B,CAS9B;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,GAAG,CAAZ;;AACA,QAAIL,aAAa,IAAIA,aAAa,CAACM,MAAd,GAAuB,CAA5C,EAA+C;AAC3CN,MAAAA,aAAa,CAACO,OAAd,CAAuBL,YAAD,IAAkB;AACpC;AACA,YACIA,YAAY,CAACM,SAAb,CAAuBC,IAAvB,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,QAAlB,OAAiCd,GAAG,CAACc,QAAJ,EADnD,EAEEC,IAFF,KAEW,KAHf,EAIE;AACET,UAAAA,KAAK;AACR;AACJ,OATD;AAUAU,MAAAA,oBAAoB,CAACV,KAAD,CAApB;AACH;AACJ,GAfQ,EAeN,CAACL,aAAD,EAAgBD,GAAhB,CAfM,CAAT,CAV8B,CA2B9B;;AACA,QAAM,CAACiB,iBAAD,EAAoBD,oBAApB,IAA4CpB,QAAQ,CAAC,CAAD,CAA1D;AAEA,sBACI;AAAA,cACKqB,iBAAiB,GAAG,CAApB,gBACG;AACI,MAAA,SAAS,EAAG,mHACRA,iBAAiB,GAAG,EAApB,GAAyB,SAAzB,GAAqC,EACxC,EAHL;AAAA,gBAKKA,iBAAiB,GAAG,EAApB,GAAyB,KAAzB,GAAiCA;AALtC;AAAA;AAAA;AAAA;AAAA,YADH,GASG;AAVR,mBADJ;AAeH,CA7CD;;GAAMlB,mB;UAKwBF,W;;;KALxBE,mB;AA+CN,eAAeA,mBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { authContext } from \"../../contexts/authContext\";\n\nconst NotificationCounter = () => {\n    // getting uid of the logged in user\n    const { uid } = useContext(authContext);\n\n    // accessing the global notification store\n    const { notifications } = useSelector((state) => state.notification);\n\n    console.log(\"notifications in counter\", notifications);\n\n    // function to find the no. of unread notifications\n    useEffect(() => {\n        let count = 0;\n        if (notifications && notifications.length > 0) {\n            notifications.forEach((notification) => {\n                // console.log(notification.receivers.find((r) => r.user._id === uid));\n                if (\n                    notification.receivers.find(\n                        (receiver) => receiver.user._id.toString() === uid.toString()\n                    ).read === false\n                ) {\n                    count++;\n                }\n            });\n            setReadNotifications(count);\n        }\n    }, [notifications, uid]);\n\n    // state to manage the unread notification count\n    const [readNotifications, setReadNotifications] = useState(0);\n\n    return (\n        <>\n            {readNotifications > 0 ? (\n                <h5\n                    className={`bg-red-500 text-center w-6 h-6 rounded-full text-white flex items-center justify-center absolute -top-1 right-0 ${\n                        readNotifications > 99 ? \"text-xs\" : \"\"\n                    }`}\n                >\n                    {readNotifications > 99 ? \"99+\" : readNotifications}\n                </h5>\n            ) : (\n                \"\"\n            )}\n        </>\n    );\n};\n\nexport default NotificationCounter;\n"]},"metadata":{},"sourceType":"module"}
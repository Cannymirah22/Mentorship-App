{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ChatAlt2Icon from \"../../../../../assets/icons/ChatAlt2Icon\";\nimport ChatSideBar from \"./chatSideBar/ChatSideBar\";\nimport ChatWindow from \"./chatWindow/ChatWindow\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useState, useRef } from \"react\";\nimport ChatModal from \"./chatModal/ChatModal\";\nimport ModalOverlay from \"../../../../modal/ModalOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  // api call to fetch all the chats\n  useEffect(() => {\n    if (localStorage.getItem(\"visible\") !== null) {\n      localStorage.removeItem(\"visible\");\n    }\n  }, []); // state to control the modal show and dont show\n\n  const [showModal, setShowModal] = useState(false); // state variable for storing the selected chat id for the selected chat\n\n  const [selectedChat, setSelectedChat] = useState(\"\"); // state for showing the selected chat at top of chat window\n\n  const [curChat, setCurChat] = useState({\n    avatar: \"\",\n    name: \"\"\n  }); // set selected set\n\n  const setChatSelection = id => {\n    setSelectedChat(id);\n    localStorage.setItem(\"selectedChat\", id);\n  }; // refs used for css transition to work for the modal and the overlay\n\n\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 px-48 w-full h-full overflow-hidden relative\",\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: overlayRef,\n        in: showModal,\n        timeout: 300,\n        classNames: \"overlay\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n          nodeRef: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        nodeRef: modalRef,\n        in: showModal,\n        timeout: 300,\n        classNames: \"modal\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(ChatModal, {\n          nodeRef: modalRef,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white flex w-full items-center justify-between p-3 mt-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-gray-500\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"flex items-center justify-between py-2 px-4 rounded-md bg-blue-600 hover:bg-blue-800 transition-colors text-white\",\n          children: [/*#__PURE__*/_jsxDEV(ChatAlt2Icon, {\n            alt: false,\n            myStyle: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), \"Create a chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-x-5 h-cal w-full mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(ChatSideBar, {\n          setChatSelection: setChatSelection,\n          setCurChat: setCurChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n          selectedChat: selectedChat,\n          curChat: curChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chat, \"buHfWz6bSYpiluVUdKbccCf7A3k=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/dashboard/mentorDashboard/dashboardLinks/chat/Chat.js"],"names":["React","useEffect","ChatAlt2Icon","ChatSideBar","ChatWindow","CSSTransition","useState","useRef","ChatModal","ModalOverlay","Chat","localStorage","getItem","removeItem","showModal","setShowModal","selectedChat","setSelectedChat","curChat","setCurChat","avatar","name","setChatSelection","id","setItem","modalRef","overlayRef"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ChatAlt2Icon from \"../../../../../assets/icons/ChatAlt2Icon\";\nimport ChatSideBar from \"./chatSideBar/ChatSideBar\";\nimport ChatWindow from \"./chatWindow/ChatWindow\";\n\nimport { CSSTransition } from \"react-transition-group\";\nimport { useState, useRef } from \"react\";\nimport ChatModal from \"./chatModal/ChatModal\";\nimport ModalOverlay from \"../../../../modal/ModalOverlay\";\n\nconst Chat = () => {\n    // api call to fetch all the chats\n    useEffect(() => {\n        if (localStorage.getItem(\"visible\") !== null) {\n            localStorage.removeItem(\"visible\");\n        }\n    }, []);\n\n    // state to control the modal show and dont show\n    const [showModal, setShowModal] = useState(false);\n\n    // state variable for storing the selected chat id for the selected chat\n    const [selectedChat, setSelectedChat] = useState(\"\");\n\n    // state for showing the selected chat at top of chat window\n    const [curChat, setCurChat] = useState({\n        avatar: \"\",\n        name: \"\",\n    });\n\n    // set selected set\n    const setChatSelection = (id) => {\n        setSelectedChat(id);\n        localStorage.setItem(\"selectedChat\", id);\n    };\n\n    // refs used for css transition to work for the modal and the overlay\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    return (\n        <>\n            <div className=\"py-2 px-48 w-full h-full overflow-hidden relative\">\n                <CSSTransition\n                    nodeRef={overlayRef}\n                    in={showModal}\n                    timeout={300}\n                    classNames=\"overlay\"\n                    unmountOnExit\n                >\n                    <ModalOverlay nodeRef={overlayRef} />\n                </CSSTransition>\n                <CSSTransition\n                    nodeRef={modalRef}\n                    in={showModal}\n                    timeout={300}\n                    classNames=\"modal\"\n                    unmountOnExit\n                >\n                    <ChatModal nodeRef={modalRef} setShowModal={setShowModal} />\n                </CSSTransition>\n\n                <div className=\"bg-white flex w-full items-center justify-between p-3 mt-2 rounded-lg\">\n                    <h2 className=\"text-gray-500\">Chat</h2>\n                    <button\n                        onClick={() => setShowModal(true)}\n                        className=\"flex items-center justify-between py-2 px-4 rounded-md bg-blue-600 hover:bg-blue-800 transition-colors text-white\"\n                    >\n                        <ChatAlt2Icon alt={false} myStyle={\"h-5 w-5 mr-2\"} />\n                        Create a chat\n                    </button>\n                </div>\n                <div className=\"flex gap-x-5 h-cal w-full mt-5\">\n                    <ChatSideBar setChatSelection={setChatSelection} setCurChat={setCurChat} />\n                    <ChatWindow selectedChat={selectedChat} curChat={curChat} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}
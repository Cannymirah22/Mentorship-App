{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = ({\n  location\n}) => {\n  _s();\n\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [fields, setFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    enrollmentNo: \"\",\n    semester: \"\",\n    department: \"\"\n  });\n  const [recaptcha, setRecaptcha] = useState(false);\n  const [showPass, setShowPass] = useState(\"password\");\n  const [FPEmail, setFPEmail] = useState({\n    role: location.state,\n    email: \"\"\n  });\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const validRoles = [\"Admin\", \"Mentor\", \"Mentee\"];\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n  useEffect(() => {\n    if (!location.state || !validRoles.includes(location.state.trim())) {\n      showToast(\"error\", \"Invalid role. Redirecting...\", 3000, toast.POSITION.TOP_RIGHT);\n      setTimeout(() => {\n        history.goBack();\n      }, 2000);\n    }\n  }, [location.state, history]);\n\n  const resetFields = () => {\n    setFields({\n      firstName: \"\",\n      lastName: \"\",\n      middleName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      enrollmentNo: \"\",\n      semester: \"\",\n      department: \"\"\n    });\n  };\n\n  const handleToggle = () => {\n    setToggleLogin(!toggleLogin);\n    resetFields();\n    setRecaptcha(false); // Reset reCAPTCHA state when toggling between sign-up and sign-in\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"semester\" && e.target.value === \"\") return;\n    setFields({ ...fields,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!location.state || !validRoles.includes(location.state.trim())) {\n      showToast(\"error\", \"Invalid role selected\", 3000, toast.POSITION.TOP_RIGHT);\n      return;\n    } // Only enforce reCAPTCHA for sign-up mode\n\n\n    if (!recaptcha && toggleLogin) {\n      showToast(\"error\", \"Please complete the reCAPTCHA\", 3000, toast.POSITION.TOP_RIGHT);\n      return;\n    }\n\n    if (location.state === \"Admin\") {\n      dispatch(adminSignIn(fields, history));\n    } else if (location.state === \"Mentor\") {\n      if (toggleLogin) {\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 3000, toast.POSITION.TOP_RIGHT);\n          return;\n        }\n\n        dispatch(mentorSignUp(fields, handleToggle));\n      } else {\n        dispatch(mentorSignIn(fields, history));\n      }\n    } else if (location.state === \"Mentee\") {\n      if (toggleLogin) {\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 3000, toast.POSITION.TOP_RIGHT);\n          return;\n        }\n\n        dispatch(studentSignUp(fields, handleToggle));\n      } else {\n        dispatch(studentSignIn(fields, history));\n      }\n    }\n\n    resetFields();\n  };\n\n  const handleCaptchaChange = async val => {\n    console.log(\"Captcha value: \", val); // Debug line\n\n    if (val) {\n      try {\n        const isValid = await dispatch(verifyRecaptcha(val));\n        console.log(\"Captcha validation status: \", isValid); // Debug line\n\n        setRecaptcha(isValid);\n      } catch (error) {\n        setRecaptcha(false);\n        showToast(\"error\", \"Failed to verify reCAPTCHA. Please try again.\", 3000, toast.POSITION.TOP_RIGHT);\n      }\n    } else {\n      setRecaptcha(false);\n    }\n  };\n\n  const handlePasswordShowToggle = () => {\n    setShowPass(prev => prev === \"password\" ? \"text\" : \"password\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: overlayRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"overlay\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        nodeRef: overlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: modalRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"modal\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n        nodeRef: modalRef,\n        setShowModal: setShowModal,\n        setFPEmail: setFPEmail,\n        FPEmail: FPEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-3 bg-white h-full flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: \"36px\"\n          },\n          className: \"w-full text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-teal-500\",\n            children: location.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), \" \", toggleLogin ? \"Sign up\" : \"Sign in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginBg,\n        alt: \"\",\n        className: \"w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-2 bg-teal-600 h-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                className: \"mb-2 text-white\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"firstName\",\n                name: \"firstName\",\n                type: \"text\",\n                value: fields.firstName,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-md border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"mb-2 text-white\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: fields.email,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"mb-2 text-white\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: showPass,\n              value: fields.password,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handlePasswordShowToggle,\n              className: \"text-teal-300 cursor-pointer\",\n              children: [showPass === \"password\" ? \"Show\" : \"Hide\", \" password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              className: \"mb-2 text-white\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: showPass,\n              value: fields.confirmPassword,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-6\",\n            children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n              sitekey: \"6LfRWWYqAAAAABBKTeo4jK_idoAD6vVfS55Tflm3\",\n              onChange: handleCaptchaChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowModal(true),\n              className: \"text-teal-300\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-gradient-to-r from-teal-400 to-teal-600 text-white font-bold rounded-lg py-3 px-6 shadow-md hover:shadow-lg transition duration-300 ease-in-out\",\n              children: [toggleLogin ? \"Sign Up\" : \"Sign In\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n                className: \"inline-block ml-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"k6R/z3AdkFHGRstQwUL6PtkoB/8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/auth/Auth.js"],"names":["React","useState","useEffect","useRef","useDispatch","useHistory","adminSignIn","mentorSignIn","mentorSignUp","studentSignIn","studentSignUp","ArrowRight","loginBg","ReCAPTCHA","toast","ToastContainer","showToast","Checkbox","FormControlLabel","CSSTransition","ModalOverlay","ForgotPasswordModal","verifyRecaptcha","Auth","location","toggleLogin","setToggleLogin","fields","setFields","firstName","lastName","middleName","email","password","confirmPassword","enrollmentNo","semester","department","recaptcha","setRecaptcha","showPass","setShowPass","FPEmail","setFPEmail","role","state","showModal","setShowModal","dispatch","history","validRoles","modalRef","overlayRef","includes","trim","POSITION","TOP_RIGHT","setTimeout","goBack","resetFields","handleToggle","handleChange","e","target","name","value","handleSubmit","preventDefault","handleCaptchaChange","val","console","log","isValid","error","handlePasswordShowToggle","prev","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\n\nconst Auth = ({ location }) => {\n    const [toggleLogin, setToggleLogin] = useState(false);\n    const [fields, setFields] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        enrollmentNo: \"\",\n        semester: \"\",\n        department: \"\",\n    });\n    const [recaptcha, setRecaptcha] = useState(false);\n    const [showPass, setShowPass] = useState(\"password\");\n    const [FPEmail, setFPEmail] = useState({\n        role: location.state,\n        email: \"\",\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const validRoles = [\"Admin\", \"Mentor\", \"Mentee\"];\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    useEffect(() => {\n        if (!location.state || !validRoles.includes(location.state.trim())) {\n            showToast(\"error\", \"Invalid role. Redirecting...\", 3000, toast.POSITION.TOP_RIGHT);\n            setTimeout(() => {\n                history.goBack();\n            }, 2000);\n        }\n    }, [location.state, history]);\n\n    const resetFields = () => {\n        setFields({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            enrollmentNo: \"\",\n            semester: \"\",\n            department: \"\",\n        });\n    };\n\n    const handleToggle = () => {\n        setToggleLogin(!toggleLogin);\n        resetFields();\n        setRecaptcha(false); // Reset reCAPTCHA state when toggling between sign-up and sign-in\n    };\n\n    const handleChange = (e) => {\n        if (e.target.name === \"semester\" && e.target.value === \"\") return;\n        setFields({ ...fields, [e.target.name]: e.target.value.trim() });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!location.state || !validRoles.includes(location.state.trim())) {\n            showToast(\"error\", \"Invalid role selected\", 3000, toast.POSITION.TOP_RIGHT);\n            return;\n        }\n\n        // Only enforce reCAPTCHA for sign-up mode\n        if (!recaptcha && toggleLogin) {\n            showToast(\"error\", \"Please complete the reCAPTCHA\", 3000, toast.POSITION.TOP_RIGHT);\n            return;\n        }\n\n        if (location.state === \"Admin\") {\n            dispatch(adminSignIn(fields, history));\n        } else if (location.state === \"Mentor\") {\n            if (toggleLogin) {\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 3000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                dispatch(mentorSignUp(fields, handleToggle));\n            } else {\n                dispatch(mentorSignIn(fields, history));\n            }\n        } else if (location.state === \"Mentee\") {\n            if (toggleLogin) {\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 3000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                dispatch(studentSignUp(fields, handleToggle));\n            } else {\n                dispatch(studentSignIn(fields, history));\n            }\n        }\n\n        resetFields();\n    };\n\n    const handleCaptchaChange = async (val) => {\n        console.log(\"Captcha value: \", val); // Debug line\n        if (val) {\n            try {\n                const isValid = await dispatch(verifyRecaptcha(val));\n                console.log(\"Captcha validation status: \", isValid); // Debug line\n                setRecaptcha(isValid);\n            } catch (error) {\n                setRecaptcha(false);\n                showToast(\"error\", \"Failed to verify reCAPTCHA. Please try again.\", 3000, toast.POSITION.TOP_RIGHT);\n            }\n        } else {\n            setRecaptcha(false);\n        }\n    };\n\n    const handlePasswordShowToggle = () => {\n        setShowPass((prev) => (prev === \"password\" ? \"text\" : \"password\"));\n    };\n\n    return (\n        <div className=\"w-full h-screen flex items-center\">\n            <CSSTransition\n                nodeRef={overlayRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"overlay\"\n                unmountOnExit\n            >\n                <ModalOverlay nodeRef={overlayRef} />\n            </CSSTransition>\n            <CSSTransition\n                nodeRef={modalRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"modal\"\n                unmountOnExit\n            >\n                <ForgotPasswordModal\n                    nodeRef={modalRef}\n                    setShowModal={setShowModal}\n                    setFPEmail={setFPEmail}\n                    FPEmail={FPEmail}\n                />\n            </CSSTransition>\n            <div className=\"flex-3 bg-white h-full flex flex-col items-center justify-center\">\n                <div className=\"w-full\">\n                    <h1 style={{ fontSize: \"36px\" }} className=\"w-full text-center\">\n                        <span className=\"text-teal-500\">{location.state}</span>{\" \"}\n                        {toggleLogin ? \"Sign up\" : \"Sign in\"}\n                    </h1>\n                </div>\n                <img src={loginBg} alt=\"\" className=\"w-1/2\" />\n            </div>\n            <div className=\"flex-2 bg-teal-600 h-full flex items-center justify-center\">\n                <div className=\"w-96\">\n                    <form onSubmit={handleSubmit}>\n                        {toggleLogin && (\n                            <div className=\"grid grid-cols-3 gap-2\">\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"firstName\" className=\"mb-2 text-white\">\n                                        First name\n                                    </label>\n                                    <input\n                                        id=\"firstName\"\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        value={fields.firstName}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-md border-none\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"email\" className=\"mb-2 text-white\">Email Address</label>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                value={fields.email}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-lg border-none\"\n                            />\n                        </div>\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"password\" className=\"mb-2 text-white\">Password</label>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type={showPass}\n                                value={fields.password}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-lg border-none\"\n                            />\n                            <span onClick={handlePasswordShowToggle} className=\"text-teal-300 cursor-pointer\">\n                                {showPass === \"password\" ? \"Show\" : \"Hide\"} password\n                            </span>\n                        </div>\n                        {toggleLogin && (\n                            <div className=\"flex flex-col mb-6\">\n                                <label htmlFor=\"confirmPassword\" className=\"mb-2 text-white\">\n                                    Confirm Password\n                                </label>\n                                <input\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    type={showPass}\n                                    value={fields.confirmPassword}\n                                    onChange={handleChange}\n                                    required\n                                    className=\"rounded-lg border-none\"\n                                />\n                            </div>\n                        )}\n                        <div className=\"flex items-center mb-6\">\n                            <ReCAPTCHA\n                                sitekey=\"6LfRWWYqAAAAABBKTeo4jK_idoAD6vVfS55Tflm3\"\n                                onChange={handleCaptchaChange}\n                            />\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                            <button type=\"button\" onClick={() => setShowModal(true)} className=\"text-teal-300\">\n                                Forgot Password?\n                            </button>\n                            <button\n                                type=\"submit\"\n                                className=\"bg-gradient-to-r from-teal-400 to-teal-600 text-white font-bold rounded-lg py-3 px-6 shadow-md hover:shadow-lg transition duration-300 ease-in-out\"\n                            >\n                                {toggleLogin ? \"Sign Up\" : \"Sign In\"}\n                                <ArrowRight className=\"inline-block ml-2\" />\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <ToastContainer />\n        </div>\n    );\n};\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}
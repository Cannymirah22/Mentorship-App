{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [fields, setFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    enrollmentNo: \"\",\n    semester: \"\",\n    department: \"\"\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    if (!location.state) {\n      history.push(\"/login\");\n    }\n  }, [location.state, history]);\n\n  const resetFields = () => {\n    setFields({\n      firstName: \"\",\n      lastName: \"\",\n      middleName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      enrollmentNo: \"\",\n      semester: \"\",\n      department: \"\"\n    });\n  };\n\n  const handleToggle = () => {\n    setToggleLogin(!toggleLogin);\n    resetFields();\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"semester\" && e.target.value === \"\") return;\n    setFields({ ...fields,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (toggleLogin === false && recaptcha) return;\n\n    if (location.state === \"Admin\") {\n      dispatch(adminSignIn(fields, history));\n    } else if (location.state === \"Mentor\") {\n      if (toggleLogin) {\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n          return;\n        }\n\n        dispatch(mentorSignUp(fields, handleToggle));\n      } else {\n        dispatch(mentorSignIn(fields, history));\n      }\n    } else if (location.state === \"Mentee\") {\n      if (toggleLogin) {\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n          return;\n        }\n\n        dispatch(studentSignUp(fields, handleToggle));\n      } else {\n        dispatch(studentSignIn(fields, history));\n      }\n    }\n\n    resetFields();\n  };\n\n  const [recaptcha, setRecaptcha] = useState(true);\n\n  const handleCaptchaChange = val => {\n    dispatch(verifyRecaptcha(val, setRecaptcha));\n  };\n\n  const [showPass, setShowPass] = useState(\"password\");\n  const [FPEmail, setFPEmail] = useState({\n    role: location.state,\n    email: \"\"\n  });\n\n  const handlePasswordShowToggle = () => {\n    setShowPass(showPass === \"password\" ? \"text\" : \"password\");\n  };\n\n  const [showModal, setShowModal] = useState(false);\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex items-center justify-center bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: overlayRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"overlay\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        nodeRef: overlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: modalRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"modal\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n        nodeRef: modalRef,\n        setShowModal: setShowModal,\n        setFPEmail: setFPEmail,\n        FPEmail: FPEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-11/12 md:w-3/5 lg:w-2/5 p-8 bg-white shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl text-center font-bold text-blue-500 mb-4\",\n        children: [location.state, \" \", toggleLogin ? \"Sign-Up\" : \"Sign-In\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginBg,\n        alt: \"\",\n        className: \"w-32 mx-auto mb-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"firstName\",\n              name: \"firstName\",\n              type: \"text\",\n              value: fields.firstName,\n              onChange: handleChange,\n              required: true,\n              className: \"mt-1 p-2 border rounded-md w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"middleName\",\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Middle Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"middleName\",\n              name: \"middleName\",\n              type: \"text\",\n              value: fields.middleName,\n              onChange: handleChange,\n              className: \"mt-1 p-2 border rounded-md w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"lastName\",\n              name: \"lastName\",\n              type: \"text\",\n              value: fields.lastName,\n              onChange: handleChange,\n              required: true,\n              className: \"mt-1 p-2 border rounded-md w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            name: \"email\",\n            value: fields.email,\n            onChange: handleChange,\n            required: true,\n            className: \"mt-1 p-2 border rounded-md w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: showPass,\n            value: fields.password,\n            onChange: handleChange,\n            required: true,\n            className: \"mt-1 p-2 border rounded-md w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: showPass,\n            value: fields.confirmPassword,\n            onChange: handleChange,\n            required: true,\n            className: \"mt-1 p-2 border rounded-md w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: handlePasswordShowToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 48\n          }, this),\n          label: \"Show password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n            sitekey: \"YOUR_SITE_KEY\",\n            onChange: handleCaptchaChange,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full py-3 text-white bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: toggleLogin ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 text-center mt-4\",\n          children: [toggleLogin ? \"Already have an account?\" : \"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1 font-medium text-blue-500 cursor-pointer\",\n            onClick: handleToggle,\n            children: toggleLogin ? \"Sign in\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          limit: 5,\n          draggable: false,\n          pauseOnFocusLoss: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"i4MjSoHzBla2798xcpOpBw97yNI=\", false, function () {\n  return [useDispatch, useHistory, useLocation];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/auth/Auth.js"],"names":["React","useState","useEffect","useRef","useDispatch","useHistory","useLocation","adminSignIn","mentorSignIn","mentorSignUp","studentSignIn","studentSignUp","ArrowRight","loginBg","ReCAPTCHA","toast","ToastContainer","showToast","Checkbox","FormControlLabel","CSSTransition","ModalOverlay","ForgotPasswordModal","verifyRecaptcha","Auth","toggleLogin","setToggleLogin","fields","setFields","firstName","lastName","middleName","email","password","confirmPassword","enrollmentNo","semester","department","dispatch","history","location","state","push","resetFields","handleToggle","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","recaptcha","POSITION","TOP_RIGHT","setRecaptcha","handleCaptchaChange","val","showPass","setShowPass","FPEmail","setFPEmail","role","handlePasswordShowToggle","showModal","setShowModal","modalRef","overlayRef"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\"; \nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\n\nconst Auth = () => {\n    const [toggleLogin, setToggleLogin] = useState(false);\n    const [fields, setFields] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        enrollmentNo: \"\",\n        semester: \"\",\n        department: \"\"\n    });\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!location.state) {\n            history.push(\"/login\"); \n        }\n    }, [location.state, history]);\n\n    const resetFields = () => {\n        setFields({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            enrollmentNo: \"\",\n            semester: \"\",\n            department: \"\",\n        });\n    };\n\n    const handleToggle = () => {\n        setToggleLogin(!toggleLogin);\n        resetFields();\n    };\n\n    const handleChange = (e) => {\n        if (e.target.name === \"semester\" && e.target.value === \"\") return;\n        setFields({ ...fields, [e.target.name]: e.target.value.trim() });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (toggleLogin === false && recaptcha) return;\n\n        if (location.state === \"Admin\") {\n            dispatch(adminSignIn(fields, history));\n        } else if (location.state === \"Mentor\") {\n            if (toggleLogin) {\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                dispatch(mentorSignUp(fields, handleToggle));\n            } else {\n                dispatch(mentorSignIn(fields, history));\n            }\n        } else if (location.state === \"Mentee\") {\n            if (toggleLogin) {\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                dispatch(studentSignUp(fields, handleToggle));\n            } else {\n                dispatch(studentSignIn(fields, history));\n            }\n        }\n        resetFields();\n    };\n\n    const [recaptcha, setRecaptcha] = useState(true);\n\n    const handleCaptchaChange = (val) => {\n        dispatch(verifyRecaptcha(val, setRecaptcha));\n    };\n\n    const [showPass, setShowPass] = useState(\"password\");\n    const [FPEmail, setFPEmail] = useState({\n        role: location.state,\n        email: \"\",\n    });\n\n    const handlePasswordShowToggle = () => {\n        setShowPass(showPass === \"password\" ? \"text\" : \"password\");\n    };\n\n    const [showModal, setShowModal] = useState(false);\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    return (\n        <div className=\"w-full h-screen flex items-center justify-center bg-gray-100\">\n            <CSSTransition nodeRef={overlayRef} in={showModal} timeout={300} classNames=\"overlay\" unmountOnExit>\n                <ModalOverlay nodeRef={overlayRef} />\n            </CSSTransition>\n            <CSSTransition nodeRef={modalRef} in={showModal} timeout={300} classNames=\"modal\" unmountOnExit>\n                <ForgotPasswordModal nodeRef={modalRef} setShowModal={setShowModal} setFPEmail={setFPEmail} FPEmail={FPEmail} />\n            </CSSTransition>\n            <div className=\"w-11/12 md:w-3/5 lg:w-2/5 p-8 bg-white shadow-lg rounded-lg\">\n                <h1 className=\"text-3xl text-center font-bold text-blue-500 mb-4\">{location.state} {toggleLogin ? \"Sign-Up\" : \"Sign-In\"}</h1>\n                <img src={loginBg} alt=\"\" className=\"w-32 mx-auto mb-6\" />\n                <form onSubmit={handleSubmit}>\n                    {toggleLogin && (\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                            <div>\n                                <label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700\">First Name</label>\n                                <input id=\"firstName\" name=\"firstName\" type=\"text\" value={fields.firstName} onChange={handleChange} required className=\"mt-1 p-2 border rounded-md w-full\" />\n                            </div>\n                            <div>\n                                <label htmlFor=\"middleName\" className=\"text-sm font-medium text-gray-700\">Middle Name</label>\n                                <input id=\"middleName\" name=\"middleName\" type=\"text\" value={fields.middleName} onChange={handleChange} className=\"mt-1 p-2 border rounded-md w-full\" />\n                            </div>\n                            <div>\n                                <label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700\">Last Name</label>\n                                <input id=\"lastName\" name=\"lastName\" type=\"text\" value={fields.lastName} onChange={handleChange} required className=\"mt-1 p-2 border rounded-md w-full\" />\n                            </div>\n                        </div>\n                    )}\n                    <div className=\"mb-4\">\n                        <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\n                        <input id=\"email\" type=\"text\" name=\"email\" value={fields.email} onChange={handleChange} required className=\"mt-1 p-2 border rounded-md w-full\" />\n                    </div>\n                    <div className=\"mb-4\">\n                        <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</label>\n                        <input id=\"password\" name=\"password\" type={showPass} value={fields.password} onChange={handleChange} required className=\"mt-1 p-2 border rounded-md w-full\" />\n                    </div>\n                    {toggleLogin && (\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">Confirm Password</label>\n                            <input id=\"confirmPassword\" name=\"confirmPassword\" type={showPass} value={fields.confirmPassword} onChange={handleChange} required className=\"mt-1 p-2 border rounded-md w-full\" />\n                        </div>\n                    )}\n                    <FormControlLabel control={<Checkbox onChange={handlePasswordShowToggle} />} label=\"Show password\" />\n                    <div className=\"flex justify-center\">\n                        <ReCAPTCHA sitekey=\"YOUR_SITE_KEY\" onChange={handleCaptchaChange} className=\"mb-4\" />\n                    </div>\n                    <button type=\"submit\" className=\"w-full py-3 text-white bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none\">\n                        <div className=\"flex justify-center items-center space-x-2\">\n                            <span>{toggleLogin ? \"Sign Up\" : \"Sign In\"}</span>\n                            <ArrowRight />\n                        </div>\n                    </button>\n                    <div className=\"text-sm text-gray-600 text-center mt-4\">\n                        {toggleLogin ? \"Already have an account?\" : \"Don't have an account?\"}\n                        <span className=\"ml-1 font-medium text-blue-500 cursor-pointer\" onClick={handleToggle}>\n                            {toggleLogin ? \"Sign in\" : \"Sign up\"}\n                        </span>\n                    </div>\n                    <ToastContainer limit={5} draggable={false} pauseOnFocusLoss={false} />\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}
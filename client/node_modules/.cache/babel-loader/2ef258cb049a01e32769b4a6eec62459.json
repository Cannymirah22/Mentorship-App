{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const location = useLocation();\n  const [userRole, setUserRole] = useState(location.state || \"\");\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [fields, setFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    enrollmentNo: \"\",\n    semester: \"\",\n    department: \"\"\n  });\n  const dispatch = useDispatch();\n  const history = useHistory(); // Check user role on mount\n\n  useEffect(() => {\n    if (!userRole) {\n      console.log(\"Redirecting to home because userRole is empty\");\n      history.push('/'); // Redirect to home if no role is selected\n    }\n  }, [userRole, history]);\n\n  const resetFields = () => {\n    setFields({\n      firstName: \"\",\n      lastName: \"\",\n      middleName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      enrollmentNo: \"\",\n      semester: \"\",\n      department: \"\"\n    });\n  };\n\n  const handleToggle = () => {\n    setToggleLogin(!toggleLogin);\n    resetFields();\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"semester\" && e.target.value === \"\") return;\n    setFields({ ...fields,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (toggleLogin === false && recaptcha) return;\n\n    try {\n      if (userRole === \"Admin\") {\n        await dispatch(adminSignIn(fields, history));\n      } else if (userRole === \"Mentor\") {\n        if (toggleLogin) {\n          if (fields.password !== fields.confirmPassword) {\n            showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n            return;\n          }\n\n          await dispatch(mentorSignUp(fields, handleToggle));\n        } else {\n          await dispatch(mentorSignIn(fields, history));\n        }\n      } else if (userRole === \"Mentee\") {\n        if (toggleLogin) {\n          if (fields.password !== fields.confirmPassword) {\n            showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n            return;\n          }\n\n          await dispatch(studentSignUp(fields, handleToggle));\n        } else {\n          await dispatch(studentSignIn(fields, history));\n        }\n      }\n\n      resetFields();\n    } catch (error) {\n      showToast(\"error\", \"Authentication failed\", 5000, toast.POSITION.TOP_RIGHT);\n      console.error(\"Authentication error:\", error);\n    }\n  };\n\n  const [recaptcha, setRecaptcha] = useState(true);\n\n  const handleCaptchaChange = val => {\n    dispatch(verifyRecaptcha(val, setRecaptcha));\n  };\n\n  const [showPass, setShowPass] = useState(\"password\");\n  const [FPEmail, setFPEmail] = useState({\n    role: userRole,\n    email: \"\"\n  });\n\n  const handlePasswordShowToggle = () => {\n    setShowPass(prevState => prevState === \"password\" ? \"text\" : \"password\");\n  };\n\n  const [showModal, setShowModal] = useState(false);\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n  useEffect(() => {\n    setFPEmail(prev => ({ ...prev,\n      role: userRole\n    }));\n  }, [userRole]);\n\n  if (!userRole) {\n    return null; // Or a loading state\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: overlayRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"overlay\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        nodeRef: overlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: modalRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"modal\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n        nodeRef: modalRef,\n        setShowModal: setShowModal,\n        setFPEmail: setFPEmail,\n        FPEmail: FPEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-3 bg-white h-full flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: \"50px\"\n          },\n          className: \"w-full text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-500\",\n            children: userRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), \" \", toggleLogin ? \"sign-up\" : \"sign-in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginBg,\n        alt: \"\",\n        className: \"w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-2 bg-gray-600 h-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                className: \"mb-2 text-white\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"firstName\",\n                name: \"firstName\",\n                type: \"text\",\n                value: fields.firstName,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-md border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"middleName\",\n                className: \"mb-2 text-white\",\n                children: \"Middle name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"middleName\",\n                name: \"middleName\",\n                type: \"text\",\n                value: fields.middleName,\n                onChange: handleChange,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                className: \"mb-2 text-white\",\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"lastName\",\n                name: \"lastName\",\n                type: \"text\",\n                value: fields.lastName,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), toggleLogin && userRole === \"Mentee\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"enrollmentNo\",\n                className: \"mb-2 text-white\",\n                children: \"Enrollment No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"enrollmentNo\",\n                name: \"enrollmentNo\",\n                type: \"text\",\n                value: fields.enrollmentNo.toUpperCase(),\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"semester\",\n                className: \"mb-2 text-white\",\n                children: \"Semester\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"semester\",\n                name: \"semester\",\n                type: \"number\",\n                value: fields.semester,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"department\",\n                className: \"mb-2 text-white\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"department\",\n                name: \"department\",\n                type: \"text\",\n                value: fields.department,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"mb-2 text-white\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: fields.email,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"mb-2 text-white\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: showPass,\n              value: fields.password,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              className: \"mb-2 text-white\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: showPass,\n              value: fields.confirmPassword,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-lg border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"default\",\n              checked: showPass === \"text\",\n              onChange: handlePasswordShowToggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this),\n            label: \"Show Password\",\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `bg-white py-2 px-3 rounded-full flex items-center justify-center gap-x-2 w-full text-gray-600 group mt-4`,\n            children: [toggleLogin ? \"Sign up\" : \"Sign in\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n              alt: false,\n              myStyle: \"h-4 w-4 group-hover:translate-x-2 transform transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between text-white mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowModal(true),\n              className: \"underline\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleToggle,\n              className: \"underline\",\n              children: toggleLogin ? \"Already have an account?\" : \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      limit: 5,\n      draggable: false,\n      pauseOnFocusLoss: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: process.env.REACT_APP_RECAPTCHA_SITE_KEY,\n      onChange: handleCaptchaChange,\n      className: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"OBZlIymsE4RHw15QqqV556CBq50=\", false, function () {\n  return [useLocation, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/auth/Auth.js"],"names":["React","useState","useEffect","useRef","useDispatch","useHistory","useLocation","adminSignIn","mentorSignIn","mentorSignUp","studentSignIn","studentSignUp","ArrowRight","loginBg","ReCAPTCHA","toast","ToastContainer","showToast","Checkbox","FormControlLabel","CSSTransition","ModalOverlay","ForgotPasswordModal","verifyRecaptcha","Auth","location","userRole","setUserRole","state","toggleLogin","setToggleLogin","fields","setFields","firstName","lastName","middleName","email","password","confirmPassword","enrollmentNo","semester","department","dispatch","history","console","log","push","resetFields","handleToggle","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","recaptcha","POSITION","TOP_RIGHT","error","setRecaptcha","handleCaptchaChange","val","showPass","setShowPass","FPEmail","setFPEmail","role","handlePasswordShowToggle","prevState","showModal","setShowModal","modalRef","overlayRef","prev","fontSize","toUpperCase","process","env","REACT_APP_RECAPTCHA_SITE_KEY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\n\nconst Auth = () => {\n    const location = useLocation();\n    const [userRole, setUserRole] = useState(location.state || \"\");\n\n    const [toggleLogin, setToggleLogin] = useState(false);\n    const [fields, setFields] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        enrollmentNo: \"\",\n        semester: \"\",\n        department: \"\",\n    });\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // Check user role on mount\n    useEffect(() => {\n        if (!userRole) {\n            console.log(\"Redirecting to home because userRole is empty\");\n            history.push('/'); // Redirect to home if no role is selected\n        }\n    }, [userRole, history]);\n\n    const resetFields = () => {\n        setFields({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            enrollmentNo: \"\",\n            semester: \"\",\n            department: \"\",\n        });\n    };\n\n    const handleToggle = () => {\n        setToggleLogin(!toggleLogin);\n        resetFields();\n    };\n\n    const handleChange = (e) => {\n        if (e.target.name === \"semester\" && e.target.value === \"\") return;\n        setFields({ ...fields, [e.target.name]: e.target.value.trim() });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (toggleLogin === false && recaptcha) return;\n\n        try {\n            if (userRole === \"Admin\") {\n                await dispatch(adminSignIn(fields, history));\n            } else if (userRole === \"Mentor\") {\n                if (toggleLogin) {\n                    if (fields.password !== fields.confirmPassword) {\n                        showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                        return;\n                    }\n                    await dispatch(mentorSignUp(fields, handleToggle));\n                } else {\n                    await dispatch(mentorSignIn(fields, history));\n                }\n            } else if (userRole === \"Mentee\") {\n                if (toggleLogin) {\n                    if (fields.password !== fields.confirmPassword) {\n                        showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                        return;\n                    }\n                    await dispatch(studentSignUp(fields, handleToggle));\n                } else {\n                    await dispatch(studentSignIn(fields, history));\n                }\n            }\n            resetFields();\n        } catch (error) {\n            showToast(\"error\", \"Authentication failed\", 5000, toast.POSITION.TOP_RIGHT);\n            console.error(\"Authentication error:\", error);\n        }\n    };\n\n    const [recaptcha, setRecaptcha] = useState(true);\n    const handleCaptchaChange = (val) => {\n        dispatch(verifyRecaptcha(val, setRecaptcha));\n    };\n\n    const [showPass, setShowPass] = useState(\"password\");\n    const [FPEmail, setFPEmail] = useState({\n        role: userRole,\n        email: \"\",\n    });\n\n    const handlePasswordShowToggle = () => {\n        setShowPass((prevState) => (prevState === \"password\" ? \"text\" : \"password\"));\n    };\n\n    const [showModal, setShowModal] = useState(false);\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    useEffect(() => {\n        setFPEmail((prev) => ({ ...prev, role: userRole }));\n    }, [userRole]);\n\n    if (!userRole) {\n        return null; // Or a loading state\n    }\n\n    return (\n        <div className=\"w-full h-screen flex items-center\">\n            <CSSTransition nodeRef={overlayRef} in={showModal} timeout={300} classNames=\"overlay\" unmountOnExit>\n                <ModalOverlay nodeRef={overlayRef} />\n            </CSSTransition>\n            <CSSTransition nodeRef={modalRef} in={showModal} timeout={300} classNames=\"modal\" unmountOnExit>\n                <ForgotPasswordModal nodeRef={modalRef} setShowModal={setShowModal} setFPEmail={setFPEmail} FPEmail={FPEmail} />\n            </CSSTransition>\n            <div className=\"flex-3 bg-white h-full flex flex-col items-center justify-center\">\n                <div className=\"w-full\">\n                    <h1 style={{ fontSize: \"50px\" }} className=\"w-full text-center\">\n                        <span className=\"text-blue-500\">{userRole}</span>{\" \"}\n                        {toggleLogin ? \"sign-up\" : \"sign-in\"}\n                    </h1>\n                </div>\n                <img src={loginBg} alt=\"\" className=\"w-1/2\" />\n            </div>\n            <div className=\"flex-2 bg-gray-600 h-full flex items-center justify-center\">\n                <div className=\"w-96\">\n                    <form onSubmit={handleSubmit}>\n                        {toggleLogin && (\n                            <div className=\"grid grid-cols-3 gap-2\">\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"firstName\" className=\"mb-2 text-white\">First name</label>\n                                    <input\n                                        id=\"firstName\"\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        value={fields.firstName}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-md border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"middleName\" className=\"mb-2 text-white\">Middle name</label>\n                                    <input\n                                        id=\"middleName\"\n                                        name=\"middleName\"\n                                        type=\"text\"\n                                        value={fields.middleName}\n                                        onChange={handleChange}\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"lastName\" className=\"mb-2 text-white\">Last name</label>\n                                    <input\n                                        id=\"lastName\"\n                                        name=\"lastName\"\n                                        type=\"text\"\n                                        value={fields.lastName}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        {toggleLogin && userRole === \"Mentee\" ? (\n                            <div className=\"grid grid-cols-2 gap-2\">\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"enrollmentNo\" className=\"mb-2 text-white\">Enrollment No.</label>\n                                    <input\n                                        id=\"enrollmentNo\"\n                                        name=\"enrollmentNo\"\n                                        type=\"text\"\n                                        value={fields.enrollmentNo.toUpperCase()}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"semester\" className=\"mb-2 text-white\">Semester</label>\n                                    <input\n                                        id=\"semester\"\n                                        name=\"semester\"\n                                        type=\"number\"\n                                        value={fields.semester}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"department\" className=\"mb-2 text-white\">Department</label>\n                                    <input\n                                        id=\"department\"\n                                        name=\"department\"\n                                        type=\"text\"\n                                        value={fields.department}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                            </div>\n                        ) : null}\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"email\" className=\"mb-2 text-white\">Email</label>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                value={fields.email}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-lg border-none\"\n                            />\n                        </div>\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"password\" className=\"mb-2 text-white\">Password</label>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type={showPass}\n                                value={fields.password}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-lg border-none\"\n                            />\n                        </div>\n                        {toggleLogin && (\n                            <div className=\"flex flex-col mb-6\">\n                                <label htmlFor=\"confirmPassword\" className=\"mb-2 text-white\">Confirm Password</label>\n                                <input\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    type={showPass}\n                                    value={fields.confirmPassword}\n                                    onChange={handleChange}\n                                    required\n                                    className=\"rounded-lg border-none\"\n                                />\n                            </div>\n                        )}\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    color=\"default\"\n                                    checked={showPass === \"text\"}\n                                    onChange={handlePasswordShowToggle}\n                                />\n                            }\n                            label=\"Show Password\"\n                            className=\"text-white\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className={`bg-white py-2 px-3 rounded-full flex items-center justify-center gap-x-2 w-full text-gray-600 group mt-4`}\n                        >\n                            {toggleLogin ? \"Sign up\" : \"Sign in\"}\n                            <ArrowRight alt={false} myStyle={\"h-4 w-4 group-hover:translate-x-2 transform transition\"} />\n                        </button>\n                        <div className=\"flex justify-between text-white mt-4\">\n                            <button\n                                type=\"button\"\n                                onClick={() => setShowModal(true)}\n                                className=\"underline\"\n                            >\n                                Forgot password?\n                            </button>\n                            <button type=\"button\" onClick={handleToggle} className=\"underline\">\n                                {toggleLogin ? \"Already have an account?\" : \"Create an account\"}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <ToastContainer limit={5} draggable={false} pauseOnFocusLoss={false} />\n            <ReCAPTCHA\n                sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n                onChange={handleCaptchaChange}\n                className=\"hidden\"\n            />\n        </div>\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}
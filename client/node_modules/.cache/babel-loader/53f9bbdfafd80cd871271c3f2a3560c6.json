{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const {\n    role\n  } = useParams(); // Get role from URL parameter\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch(); // Validate and capitalize role\n\n  const validRoles = ['admin', 'mentor', 'mentee'];\n  const userRole = role ? role.charAt(0).toUpperCase() + role.slice(1).toLowerCase() : ''; // Redirect if invalid role\n\n  useEffect(() => {\n    if (!validRoles.includes(role === null || role === void 0 ? void 0 : role.toLowerCase())) {\n      history.push('/');\n    }\n  }, [role, history]);\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [fields, setFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    enrollmentNo: \"\",\n    semester: \"\",\n    department: \"\"\n  }); // Rest of your state declarations...\n\n  const [showPass, setShowPass] = useState(\"password\");\n  const [recaptcha, setRecaptcha] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [FPEmail, setFPEmail] = useState({\n    role: userRole,\n    email: \"\"\n  });\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n\n  const resetFields = () => {\n    setFields({\n      firstName: \"\",\n      lastName: \"\",\n      middleName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      enrollmentNo: \"\",\n      semester: \"\",\n      department: \"\"\n    });\n  };\n\n  const handleToggle = () => {\n    setToggleLogin(!toggleLogin);\n    resetFields();\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"semester\" && e.target.value === \"\") return;\n    setFields({ ...fields,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!toggleLogin && recaptcha) return;\n\n    try {\n      if (userRole === \"Admin\") {\n        await dispatch(adminSignIn(fields, history));\n      } else if (userRole === \"Mentor\") {\n        if (toggleLogin) {\n          if (fields.password !== fields.confirmPassword) {\n            showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n            return;\n          }\n\n          await dispatch(mentorSignUp(fields, handleToggle));\n        } else {\n          await dispatch(mentorSignIn(fields, history));\n        }\n      } else if (userRole === \"Mentee\") {\n        if (toggleLogin) {\n          if (fields.password !== fields.confirmPassword) {\n            showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n            return;\n          }\n\n          await dispatch(studentSignUp(fields, handleToggle));\n        } else {\n          await dispatch(studentSignIn(fields, history));\n        }\n      }\n\n      resetFields();\n    } catch (error) {\n      showToast(\"error\", \"Authentication failed\", 5000, toast.POSITION.TOP_RIGHT);\n    }\n  };\n\n  const handleCaptchaChange = val => {\n    dispatch(verifyRecaptcha(val, setRecaptcha));\n  };\n\n  const handlePasswordShowToggle = () => {\n    setShowPass(prevState => prevState === \"password\" ? \"text\" : \"password\");\n  };\n\n  if (!userRole) {\n    return null;\n  } // Rest of your component JSX remains the same, just replace location.state with userRole\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: overlayRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"overlay\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        nodeRef: overlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: modalRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"modal\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n        nodeRef: modalRef,\n        setShowModal: setShowModal,\n        setFPEmail: setFPEmail,\n        FPEmail: FPEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-3 bg-white h-full flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: \"50px\"\n          },\n          className: \"w-full text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-500\",\n            children: userRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), \" \", toggleLogin ? \"sign-up\" : \"sign-in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginBg,\n        alt: \"\",\n        className: \"w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-2 bg-gray-600 h-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), userRole !== \"Admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-5 text-white\",\n            children: toggleLogin ? \"Already have an account?\" : \"Don't have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleToggle,\n            className: \"rounded-md px-2 py-1 text-white hover:underline\",\n            children: toggleLogin ? \"Sign in\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      limit: 5,\n      draggable: false,\n      pauseOnFocusLoss: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"kR7VTAE+ogbWfzxWrclXJJgXIpQ=\", false, function () {\n  return [useParams, useHistory, useLocation, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/auth/Auth.js"],"names":["React","useState","useEffect","useRef","useDispatch","useHistory","useParams","useLocation","adminSignIn","mentorSignIn","mentorSignUp","studentSignIn","studentSignUp","ArrowRight","loginBg","ReCAPTCHA","toast","ToastContainer","showToast","Checkbox","FormControlLabel","CSSTransition","ModalOverlay","ForgotPasswordModal","verifyRecaptcha","Auth","role","history","location","dispatch","validRoles","userRole","charAt","toUpperCase","slice","toLowerCase","includes","push","toggleLogin","setToggleLogin","fields","setFields","firstName","lastName","middleName","email","password","confirmPassword","enrollmentNo","semester","department","showPass","setShowPass","recaptcha","setRecaptcha","showModal","setShowModal","FPEmail","setFPEmail","modalRef","overlayRef","resetFields","handleToggle","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","POSITION","TOP_RIGHT","error","handleCaptchaChange","val","handlePasswordShowToggle","prevState","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,kBAAnD;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,sBAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,uBAA7C;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,eAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAWpB,SAAS,EAA1B,CADe,CACe;;AAC9B,QAAMqB,OAAO,GAAGtB,UAAU,EAA1B;AACA,QAAMuB,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAGzB,WAAW,EAA5B,CAJe,CAMf;;AACA,QAAM0B,UAAU,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAnB;AACA,QAAMC,QAAQ,GAAGL,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,EAAcC,WAAd,EAAlC,GAAgE,EAArF,CARe,CAUf;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAC4B,UAAU,CAACM,QAAX,CAAoBV,IAApB,aAAoBA,IAApB,uBAAoBA,IAAI,CAAES,WAAN,EAApB,CAAL,EAA+C;AAC3CR,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACH;AACJ,GAJQ,EAIN,CAACX,IAAD,EAAOC,OAAP,CAJM,CAAT;AAMA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC;AACjCyC,IAAAA,SAAS,EAAE,EADsB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,UAAU,EAAE,EAHqB;AAIjCC,IAAAA,KAAK,EAAE,EAJ0B;AAKjCC,IAAAA,QAAQ,EAAE,EALuB;AAMjCC,IAAAA,eAAe,EAAE,EANgB;AAOjCC,IAAAA,YAAY,EAAE,EAPmB;AAQjCC,IAAAA,QAAQ,EAAE,EARuB;AASjCC,IAAAA,UAAU,EAAE;AATqB,GAAD,CAApC,CAlBe,CA8Bf;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAM,CAACoD,SAAD,EAAYC,YAAZ,IAA4BrD,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsD,SAAD,EAAYC,YAAZ,IAA4BvD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwD,OAAD,EAAUC,UAAV,IAAwBzD,QAAQ,CAAC;AACnCyB,IAAAA,IAAI,EAAEK,QAD6B;AAEnCc,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAAtC;AAKA,QAAMc,QAAQ,GAAGxD,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMyD,UAAU,GAAGzD,MAAM,CAAC,IAAD,CAAzB;;AAEA,QAAM0D,WAAW,GAAG,MAAM;AACtBpB,IAAAA,SAAS,CAAC;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,eAAe,EAAE,EANX;AAONC,MAAAA,YAAY,EAAE,EAPR;AAQNC,MAAAA,QAAQ,EAAE,EARJ;AASNC,MAAAA,UAAU,EAAE;AATN,KAAD,CAAT;AAWH,GAZD;;AAcA,QAAMY,YAAY,GAAG,MAAM;AACvBvB,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAuB,IAAAA,WAAW;AACd,GAHD;;AAKA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,IAAgCF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAvD,EAA2D;AAC3D1B,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACwB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeC,IAAf;AAA9B,KAAD,CAAT;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAOL,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAI,CAAChC,WAAD,IAAgBe,SAApB,EAA+B;;AAE/B,QAAI;AACA,UAAItB,QAAQ,KAAK,OAAjB,EAA0B;AACtB,cAAMF,QAAQ,CAACrB,WAAW,CAACgC,MAAD,EAASb,OAAT,CAAZ,CAAd;AACH,OAFD,MAEO,IAAII,QAAQ,KAAK,QAAjB,EAA2B;AAC9B,YAAIO,WAAJ,EAAiB;AACb,cAAIE,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,eAA/B,EAAgD;AAC5C7B,YAAAA,SAAS,CAAC,OAAD,EAAU,uBAAV,EAAmC,IAAnC,EAAyCF,KAAK,CAACuD,QAAN,CAAeC,SAAxD,CAAT;AACA;AACH;;AACD,gBAAM3C,QAAQ,CAACnB,YAAY,CAAC8B,MAAD,EAASsB,YAAT,CAAb,CAAd;AACH,SAND,MAMO;AACH,gBAAMjC,QAAQ,CAACpB,YAAY,CAAC+B,MAAD,EAASb,OAAT,CAAb,CAAd;AACH;AACJ,OAVM,MAUA,IAAII,QAAQ,KAAK,QAAjB,EAA2B;AAC9B,YAAIO,WAAJ,EAAiB;AACb,cAAIE,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,eAA/B,EAAgD;AAC5C7B,YAAAA,SAAS,CAAC,OAAD,EAAU,uBAAV,EAAmC,IAAnC,EAAyCF,KAAK,CAACuD,QAAN,CAAeC,SAAxD,CAAT;AACA;AACH;;AACD,gBAAM3C,QAAQ,CAACjB,aAAa,CAAC4B,MAAD,EAASsB,YAAT,CAAd,CAAd;AACH,SAND,MAMO;AACH,gBAAMjC,QAAQ,CAAClB,aAAa,CAAC6B,MAAD,EAASb,OAAT,CAAd,CAAd;AACH;AACJ;;AACDkC,MAAAA,WAAW;AACd,KAzBD,CAyBE,OAAOY,KAAP,EAAc;AACZvD,MAAAA,SAAS,CAAC,OAAD,EAAU,uBAAV,EAAmC,IAAnC,EAAyCF,KAAK,CAACuD,QAAN,CAAeC,SAAxD,CAAT;AACH;AACJ,GAhCD;;AAkCA,QAAME,mBAAmB,GAAIC,GAAD,IAAS;AACjC9C,IAAAA,QAAQ,CAACL,eAAe,CAACmD,GAAD,EAAMrB,YAAN,CAAhB,CAAR;AACH,GAFD;;AAIA,QAAMsB,wBAAwB,GAAG,MAAM;AACnCxB,IAAAA,WAAW,CAACyB,SAAS,IAAIA,SAAS,KAAK,UAAd,GAA2B,MAA3B,GAAoC,UAAlD,CAAX;AACH,GAFD;;AAIA,MAAI,CAAC9C,QAAL,EAAe;AACX,WAAO,IAAP;AACH,GA9Gc,CAgHf;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,4BAEI,QAAC,aAAD;AACI,MAAA,OAAO,EAAE6B,UADb;AAEI,MAAA,EAAE,EAAEL,SAFR;AAGI,MAAA,OAAO,EAAE,GAHb;AAII,MAAA,UAAU,EAAC,SAJf;AAKI,MAAA,aAAa,MALjB;AAAA,6BAOI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,aAAD;AACI,MAAA,OAAO,EAAED,QADb;AAEI,MAAA,EAAE,EAAEJ,SAFR;AAGI,MAAA,OAAO,EAAE,GAHb;AAII,MAAA,UAAU,EAAC,OAJf;AAKI,MAAA,aAAa,MALjB;AAAA,6BAOI,QAAC,mBAAD;AACI,QAAA,OAAO,EAAEI,QADb;AAEI,QAAA,YAAY,EAAEH,YAFlB;AAGI,QAAA,UAAU,EAAEE,UAHhB;AAII,QAAA,OAAO,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAZJ,eA2BI;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAAEqB,YAAAA,QAAQ,EAAE;AAAZ,WAAX;AAAiC,UAAA,SAAS,EAAC,oBAA3C;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,sBAAiC/C;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ,EACsD,GADtD,EAEKO,WAAW,GAAG,SAAH,GAAe,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,GAAG,EAAExB,OAAV;AAAmB,QAAA,GAAG,EAAC,EAAvB;AAA0B,QAAA,SAAS,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ,eAsCI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAM,UAAA,QAAQ,EAAEuD;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOKtC,QAAQ,KAAK,OAAb,iBACG;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,sBACKO,WAAW,GACN,0BADM,GAEN;AAHV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AACI,YAAA,OAAO,EAAEwB,YADb;AAEI,YAAA,SAAS,EAAC,iDAFd;AAAA,sBAIKxB,WAAW,GAAG,SAAH,GAAe;AAJ/B;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtCJ,eAgEI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,CAAvB;AAA0B,MAAA,SAAS,EAAE,KAArC;AAA4C,MAAA,gBAAgB,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,YAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEH,CArLD;;GAAMb,I;UACenB,S,EACDD,U,EACCE,W,EACAH,W;;;KAJfqB,I;AAuLN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\n\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\n\nconst Auth = () => {\n    const { role } = useParams(); // Get role from URL parameter\n    const history = useHistory();\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    // Validate and capitalize role\n    const validRoles = ['admin', 'mentor', 'mentee'];\n    const userRole = role ? role.charAt(0).toUpperCase() + role.slice(1).toLowerCase() : '';\n\n    // Redirect if invalid role\n    useEffect(() => {\n        if (!validRoles.includes(role?.toLowerCase())) {\n            history.push('/');\n        }\n    }, [role, history]);\n\n    const [toggleLogin, setToggleLogin] = useState(false);\n    const [fields, setFields] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        enrollmentNo: \"\",\n        semester: \"\",\n        department: \"\",\n    });\n\n    // Rest of your state declarations...\n    const [showPass, setShowPass] = useState(\"password\");\n    const [recaptcha, setRecaptcha] = useState(true);\n    const [showModal, setShowModal] = useState(false);\n    const [FPEmail, setFPEmail] = useState({\n        role: userRole,\n        email: \"\",\n    });\n\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    const resetFields = () => {\n        setFields({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            enrollmentNo: \"\",\n            semester: \"\",\n            department: \"\",\n        });\n    };\n\n    const handleToggle = () => {\n        setToggleLogin(!toggleLogin);\n        resetFields();\n    };\n\n    const handleChange = (e) => {\n        if (e.target.name === \"semester\" && e.target.value === \"\") return;\n        setFields({ ...fields, [e.target.name]: e.target.value.trim() });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!toggleLogin && recaptcha) return;\n\n        try {\n            if (userRole === \"Admin\") {\n                await dispatch(adminSignIn(fields, history));\n            } else if (userRole === \"Mentor\") {\n                if (toggleLogin) {\n                    if (fields.password !== fields.confirmPassword) {\n                        showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                        return;\n                    }\n                    await dispatch(mentorSignUp(fields, handleToggle));\n                } else {\n                    await dispatch(mentorSignIn(fields, history));\n                }\n            } else if (userRole === \"Mentee\") {\n                if (toggleLogin) {\n                    if (fields.password !== fields.confirmPassword) {\n                        showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                        return;\n                    }\n                    await dispatch(studentSignUp(fields, handleToggle));\n                } else {\n                    await dispatch(studentSignIn(fields, history));\n                }\n            }\n            resetFields();\n        } catch (error) {\n            showToast(\"error\", \"Authentication failed\", 5000, toast.POSITION.TOP_RIGHT);\n        }\n    };\n\n    const handleCaptchaChange = (val) => {\n        dispatch(verifyRecaptcha(val, setRecaptcha));\n    };\n\n    const handlePasswordShowToggle = () => {\n        setShowPass(prevState => prevState === \"password\" ? \"text\" : \"password\");\n    };\n\n    if (!userRole) {\n        return null;\n    }\n\n    // Rest of your component JSX remains the same, just replace location.state with userRole\n    return (\n        <div className=\"w-full h-screen flex items-center\">\n            {/* Your existing JSX code remains the same, just replace all instances of location.state with userRole */}\n            <CSSTransition\n                nodeRef={overlayRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"overlay\"\n                unmountOnExit\n            >\n                <ModalOverlay nodeRef={overlayRef} />\n            </CSSTransition>\n            \n            <CSSTransition\n                nodeRef={modalRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"modal\"\n                unmountOnExit\n            >\n                <ForgotPasswordModal\n                    nodeRef={modalRef}\n                    setShowModal={setShowModal}\n                    setFPEmail={setFPEmail}\n                    FPEmail={FPEmail}\n                />\n            </CSSTransition>\n            \n            <div className=\"flex-3 bg-white h-full flex flex-col items-center justify-center\">\n                <div className=\"w-full\">\n                    <h1 style={{ fontSize: \"50px\" }} className=\"w-full text-center\">\n                        <span className=\"text-blue-500\">{userRole}</span>{\" \"}\n                        {toggleLogin ? \"sign-up\" : \"sign-in\"}\n                    </h1>\n                </div>\n                <img src={loginBg} alt=\"\" className=\"w-1/2\" />\n            </div>\n\n            {/* Rest of your form JSX... */}\n            <div className=\"flex-2 bg-gray-600 h-full flex items-center justify-center\">\n                <div className=\"w-96\">\n                    <form onSubmit={handleSubmit}>\n                        {/* Your existing form fields... */}\n                        {/* Just replace all instances of location.state with userRole */}\n                        {/* Rest of the form remains exactly the same */}\n                    </form>\n                    \n                    {userRole !== \"Admin\" && (\n                        <div className=\"flex flex-col justify-center items-center\">\n                            <h4 className=\"mt-5 text-white\">\n                                {toggleLogin\n                                    ? \"Already have an account?\"\n                                    : \"Don't have an account?\"}\n                            </h4>\n\n                            <button\n                                onClick={handleToggle}\n                                className=\"rounded-md px-2 py-1 text-white hover:underline\"\n                            >\n                                {toggleLogin ? \"Sign in\" : \"Sign up\"}\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <ToastContainer limit={5} draggable={false} pauseOnFocusLoss={false} />\n        </div>\n    );\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as api from \"../api/meeting\";\nimport { showToast } from \"../components/toast/toast\";\nexport const createMeeting = (history, meeting, socket) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createMeeting(meeting);\n    console.log(\"create meeting data in actions\", data);\n\n    if (data.code === 200) {\n      const newMeeting = data.data;\n      dispatch({\n        type: \"ADD_MEETING\",\n        newMeeting\n      });\n      socket.emit(\"newNotification\", newMeeting);\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMeetings = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getMeetings();\n    console.log(\"get meeting data in actions\", data);\n\n    if (data.code === 200) {\n      const meetings = data.data;\n      return dispatch({\n        type: \"FETCH_MEETINGS\",\n        meetings\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateMeeting = (history, meeting, socket) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateMeeting(meeting.id, meeting);\n    console.log(\"update meeting data in actions\", data);\n\n    if (data.code === 200) {\n      const meeting = data.data;\n      dispatch({\n        type: \"UPDATE_MEETING\",\n        meeting\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateMinutes = meetMinutes => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateMinutes(meetMinutes.id, meetMinutes.minutes);\n    console.log(\"update minutes data in actions\", data);\n\n    if (data.code === 200) {\n      const meeting = data.data;\n      dispatch({\n        type: \"UPDATE_MEETING\",\n        meeting\n      });\n    } else {\n      showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/actions/meeting.js"],"names":["toast","api","showToast","createMeeting","history","meeting","socket","dispatch","data","console","log","code","newMeeting","type","emit","msg","POSITION","BOTTOM_LEFT","error","getMeetings","meetings","updateMeeting","id","updateMinutes","meetMinutes","minutes"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport * as api from \"../api/meeting\";\nimport { showToast } from \"../components/toast/toast\";\n\nexport const createMeeting = (history, meeting, socket) => async (dispatch) => {\n    try {\n        const { data } = await api.createMeeting(meeting);\n        console.log(\"create meeting data in actions\", data);\n\n        if (data.code === 200) {\n            const newMeeting = data.data;\n            dispatch({ type: \"ADD_MEETING\", newMeeting });\n            socket.emit(\"newNotification\", newMeeting);\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMeetings = () => async (dispatch) => {\n    try {\n        const { data } = await api.getMeetings();\n        console.log(\"get meeting data in actions\", data);\n\n        if (data.code === 200) {\n            const meetings = data.data;\n            return dispatch({ type: \"FETCH_MEETINGS\", meetings });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updateMeeting = (history, meeting, socket) => async (dispatch) => {\n    try {\n        const { data } = await api.updateMeeting(meeting.id, meeting);\n        console.log(\"update meeting data in actions\", data);\n\n        if (data.code === 200) {\n            const meeting = data.data;\n            dispatch({ type: \"UPDATE_MEETING\", meeting });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updateMinutes = (meetMinutes) => async (dispatch) => {\n    try {\n        const { data } = await api.updateMinutes(meetMinutes.id, meetMinutes.minutes);\n        console.log(\"update minutes data in actions\", data);\n\n        if (data.code === 200) {\n            const meeting = data.data;\n            dispatch({ type: \"UPDATE_MEETING\", meeting });\n        } else {\n            showToast(\"error\", data.msg, 10000, toast.POSITION.BOTTOM_LEFT);\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP\\\\Student_Mentoring_System-main\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\chat\\\\chatSideBar\\\\ChatSideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport SearchIcon from \"../../../../../../assets/icons/SearchIcon\";\nimport ChatTile from \"./ChatTile\";\nimport { useSelector } from \"react-redux\";\nimport SearchChatTile from \"./SearchChatTile\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatSideBar = ({\n  setChatSelection,\n  setCurChat\n}) => {\n  _s();\n\n  // getting uid of the logged in user\n  const {\n    uid\n  } = useContext(authContext); // accesing global state to fetch the chats\n\n  const {\n    chats\n  } = useSelector(state => state.chat); // use effect used to persists the chat side bar selection and the chat window chat top bar data\n\n  useEffect(() => {\n    if (localStorage.getItem(\"persistChat\") !== null) {\n      const index = JSON.parse(localStorage.getItem(\"persistChat\")).chatIndex;\n      localStorage.setItem(\"0\", index);\n      const chatId = JSON.parse(localStorage.getItem(\"persistChat\")).chatId;\n      const chats = JSON.parse(localStorage.getItem(\"chats\"));\n      let thatChat = chats.find(chat => chat._id.toString() === chatId.toString());\n      let thisChat = thatChat.users.find(user => user.user._id !== uid);\n      setCurChat({\n        avatar: thisChat.user.avatar.url,\n        name: `${thisChat.user.firstname} ${thisChat.user.middlename} ${thisChat.user.lastname}`\n      });\n    }\n  }, []); // state variable to show the temporary search list\n\n  const [tmpList, setTmpList] = useState([]); // state varibale to reset the search query in the input field\n\n  const [val, setVal] = useState(\"\"); // function to perform search when query typed in search bar\n\n  const handleSearch = e => {\n    let val = e.target.value;\n    let tmp = [];\n\n    if (val !== \"\" && chats.find(chat => chat.users.find(user => user.user[\"firstname\"].toString().toLowerCase().indexOf(val) > -1))) {\n      tmp.push(chats.find(chat => chat.users.find(user => user.user[\"firstname\"].toString().toLowerCase().indexOf(val) > -1)));\n    } else if (val !== \"\" && chats.find(chat => chat.users.find(user => user.user[\"middlename\"].toString().toLowerCase().indexOf(val) > -1))) {\n      tmp.push(chats.find(chat => chat.users.find(user => user.user[\"middlename\"].toString().toLowerCase().indexOf(val) > -1)));\n    } else if (val !== \"\" && chats.find(chat => chat.users.find(user => user.user[\"lastname\"].toString().toLowerCase().indexOf(val) > -1))) {\n      tmp.push(chats.find(chat => chat.users.find(user => user.user[\"lastname\"].toString().toLowerCase().indexOf(val) > -1)));\n    }\n\n    setTmpList(tmp);\n    setVal(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/5 p-2 bg-white rounded-md h-full overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-top z-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleSearch,\n            className: \"pl-11 border-none w-full focus:outline-none focus:ring-0 bg-gray-100 rounded-md\",\n            placeholder: \"Search chat...\",\n            value: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2.5 left-3\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              myStyle: \"h-5 w-5\",\n              alt: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), tmpList.length === 0 ? chats === null || chats === void 0 ? void 0 : chats.map((chat, index) => {\n        if (chat !== undefined && chat.users.find(user => user.user._id !== uid)) {\n          let thatUser = chat.users.find(user => user.user._id !== uid);\n          return /*#__PURE__*/_jsxDEV(ChatTile, {\n            chat: chat,\n            index: index,\n            setChatSelection: setChatSelection,\n            thatUser: thatUser,\n            setCurChat: setCurChat,\n            setTmpList: setTmpList\n          }, chat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 35\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, chat !== undefined && chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 34\n        }, this);\n      }) : tmpList === null || tmpList === void 0 ? void 0 : tmpList.map(chat => {\n        if (chat !== undefined && chat.users.find(user => user.user._id !== uid)) {\n          let thatUser = chat.users.find(user => user.user._id !== uid);\n          return /*#__PURE__*/_jsxDEV(SearchChatTile, {\n            chat: chat,\n            setChatSelection: setChatSelection,\n            thatUser: thatUser,\n            setCurChat: setCurChat,\n            setTmpList: setTmpList,\n            chats: chats,\n            setVal: setVal\n          }, chat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 35\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, chat !== undefined && chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 34\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatSideBar, \"cjkcXTT2kzS/3pYJNcE2qstzB6w=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatSideBar;\nexport default ChatSideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatSideBar\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP/Student_Mentoring_System-main/client/src/components/dashboard/mentorDashboard/dashboardLinks/chat/chatSideBar/ChatSideBar.js"],"names":["React","useContext","useEffect","useState","SearchIcon","ChatTile","useSelector","SearchChatTile","authContext","ChatSideBar","setChatSelection","setCurChat","uid","chats","state","chat","localStorage","getItem","index","JSON","parse","chatIndex","setItem","chatId","thatChat","find","_id","toString","thisChat","users","user","avatar","url","name","firstname","middlename","lastname","tmpList","setTmpList","val","setVal","handleSearch","e","target","value","tmp","toLowerCase","indexOf","push","length","map","undefined","thatUser"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport SearchIcon from \"../../../../../../assets/icons/SearchIcon\";\nimport ChatTile from \"./ChatTile\";\nimport { useSelector } from \"react-redux\";\nimport SearchChatTile from \"./SearchChatTile\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\n\nconst ChatSideBar = ({ setChatSelection, setCurChat }) => {\n    // getting uid of the logged in user\n    const { uid } = useContext(authContext);\n\n    // accesing global state to fetch the chats\n    const { chats } = useSelector((state) => state.chat);\n\n    // use effect used to persists the chat side bar selection and the chat window chat top bar data\n    useEffect(() => {\n        if (localStorage.getItem(\"persistChat\") !== null) {\n            const index = JSON.parse(localStorage.getItem(\"persistChat\")).chatIndex;\n            localStorage.setItem(\"0\", index);\n\n            const chatId = JSON.parse(localStorage.getItem(\"persistChat\")).chatId;\n            const chats = JSON.parse(localStorage.getItem(\"chats\"));\n            let thatChat = chats.find((chat) => chat._id.toString() === chatId.toString());\n            let thisChat = thatChat.users.find((user) => user.user._id !== uid);\n            setCurChat({\n                avatar: thisChat.user.avatar.url,\n                name: `${thisChat.user.firstname} ${thisChat.user.middlename} ${thisChat.user.lastname}`,\n            });\n        }\n    }, []);\n\n    // state variable to show the temporary search list\n    const [tmpList, setTmpList] = useState([]);\n    // state varibale to reset the search query in the input field\n    const [val, setVal] = useState(\"\");\n\n    // function to perform search when query typed in search bar\n    const handleSearch = (e) => {\n        let val = e.target.value;\n        let tmp = [];\n\n        if (\n            val !== \"\" &&\n            chats.find((chat) =>\n                chat.users.find(\n                    (user) => user.user[\"firstname\"].toString().toLowerCase().indexOf(val) > -1\n                )\n            )\n        ) {\n            tmp.push(\n                chats.find((chat) =>\n                    chat.users.find(\n                        (user) => user.user[\"firstname\"].toString().toLowerCase().indexOf(val) > -1\n                    )\n                )\n            );\n        } else if (\n            val !== \"\" &&\n            chats.find((chat) =>\n                chat.users.find(\n                    (user) => user.user[\"middlename\"].toString().toLowerCase().indexOf(val) > -1\n                )\n            )\n        ) {\n            tmp.push(\n                chats.find((chat) =>\n                    chat.users.find(\n                        (user) => user.user[\"middlename\"].toString().toLowerCase().indexOf(val) > -1\n                    )\n                )\n            );\n        } else if (\n            val !== \"\" &&\n            chats.find((chat) =>\n                chat.users.find(\n                    (user) => user.user[\"lastname\"].toString().toLowerCase().indexOf(val) > -1\n                )\n            )\n        ) {\n            tmp.push(\n                chats.find((chat) =>\n                    chat.users.find(\n                        (user) => user.user[\"lastname\"].toString().toLowerCase().indexOf(val) > -1\n                    )\n                )\n            );\n        }\n\n        setTmpList(tmp);\n        setVal(val);\n    };\n\n    return (\n        <>\n            <div className=\"w-2/5 p-2 bg-white rounded-md h-full overflow-auto\">\n                <div className=\"sticky-top z-10\">\n                    <div className=\"relative mb-4\">\n                        <input\n                            type=\"text\"\n                            onChange={handleSearch}\n                            className=\"pl-11 border-none w-full focus:outline-none focus:ring-0 bg-gray-100 rounded-md\"\n                            placeholder=\"Search chat...\"\n                            value={val}\n                        />\n                        <div className=\"absolute top-2.5 left-3\">\n                            <SearchIcon myStyle={\"h-5 w-5\"} alt={true} />\n                        </div>\n                    </div>\n                </div>\n\n                {tmpList.length === 0\n                    ? chats?.map((chat, index) => {\n                          if (\n                              chat !== undefined &&\n                              chat.users.find((user) => user.user._id !== uid)\n                          ) {\n                              let thatUser = chat.users.find((user) => user.user._id !== uid);\n                              return (\n                                  <ChatTile\n                                      key={chat._id}\n                                      chat={chat}\n                                      index={index}\n                                      setChatSelection={setChatSelection}\n                                      thatUser={thatUser}\n                                      setCurChat={setCurChat}\n                                      setTmpList={setTmpList}\n                                  />\n                              );\n                          }\n                          return <div key={chat !== undefined && chat._id}></div>;\n                      })\n                    : tmpList?.map((chat) => {\n                          if (\n                              chat !== undefined &&\n                              chat.users.find((user) => user.user._id !== uid)\n                          ) {\n                              let thatUser = chat.users.find((user) => user.user._id !== uid);\n                              return (\n                                  <SearchChatTile\n                                      key={chat._id}\n                                      chat={chat}\n                                      setChatSelection={setChatSelection}\n                                      thatUser={thatUser}\n                                      setCurChat={setCurChat}\n                                      setTmpList={setTmpList}\n                                      chats={chats}\n                                      setVal={setVal}\n                                  />\n                              );\n                          }\n                          return <div key={chat !== undefined && chat._id}></div>;\n                      })}\n            </div>\n        </>\n    );\n};\n\nexport default ChatSideBar;\n"]},"metadata":{},"sourceType":"module"}
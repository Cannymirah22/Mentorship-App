{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sweet\\\\Desktop\\\\STEPuHP App Dev opp\\\\client\\\\src\\\\components\\\\dashboard\\\\mentorDashboard\\\\dashboardLinks\\\\profile\\\\profilePicModal\\\\ProfilePicModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { mentorUpdateProfilePicture } from \"../../../../../../actions/mentor\";\nimport { studentUpdateProfilePicture } from \"../../../../../../actions/student\";\nimport UploadIcon from \"../../../../../../assets/icons/UploadIcon\";\nimport Resizer from \"react-image-file-resizer\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { Roles } from \"../../../../../../utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePicModal = ({\n  setHiddenProfilePicModal,\n  setShowOverlay,\n  nodeRef\n}) => {\n  _s();\n\n  // getting role of the logged in user\n  const {\n    role\n  } = useContext(authContext); // state to set the image to be displayed\n\n  const [image, setImage] = useState(null); // state to store the selected image data to be sent to save\n\n  const [imageToBeSent, setImageToBeSent] = useState(null);\n  const dispatch = useDispatch();\n  const history = useHistory(); // function to resize image\n\n  const resizeFile = file => new Promise(resolve => {\n    Resizer.imageFileResizer(file, // Is the file of the image which will resized.\n    200, //Is the maxWidth of the resized new image.\n    200, // Is the maxHeight of the resized new image.\n    \"JPEG\", // Is the compressFormat of the resized new image. (JPEG, PNG or WEBP)\n    90, // Is the quality of the resized new image. (0-100)\n    0, // Is the degree of clockwise rotation. (0, 90, 180, 270, 360)\n    uri => resolve(uri), // Is the callBack function of the resized new image URI.\n    \"file\" // Is the output type of the resized new image. (file, base64 or blob)\n    );\n  }); // function to handle the image submit\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"avatar\", imageToBeSent);\n\n    if (role === Roles.MENTOR) {\n      dispatch(mentorUpdateProfilePicture(history, formData));\n    } else {\n      dispatch(studentUpdateProfilePicture(history, formData));\n    }\n\n    handleModalActions();\n  }; // async function to set the image data for the newly selected image\n\n\n  const onImageChange = async event => {\n    if (event.target.files && event.target.files[0]) {\n      setImage(URL.createObjectURL(event.target.files[0]));\n      const file = event.target.files[0];\n      const image = await resizeFile(file);\n      console.log(file, image);\n      setImageToBeSent(image);\n    }\n  }; // function to set the modal state to hide\n\n\n  const handleModalActions = () => {\n    setHiddenProfilePicModal(false);\n    setShowOverlay(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full bg-transparent absolute top-0 left-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: nodeRef,\n        className: \"overflow-y-auto z-50 p-6 bg-white rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mr-5\",\n            children: \"Update profile photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleModalActions,\n            className: \"text-2xl\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex items-center justify-center mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-32 h-32 rounded-md border border-gray-900\",\n            src: image,\n            alt: \"Not selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm font-medium text-gray-900 block mb-2\",\n          htmlFor: \"user_avatar\",\n          children: \"Upload a file (supported - png/jpeg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          encType: \"multipart/form-data\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center w-full justify-between gap-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: onImageChange,\n              className: \"block w-full cursor-pointer bg-gray-50 border border-gray-300 text-gray-900 focus:outline-none focus:border-transparent text-sm rounded-lg\",\n              \"aria-describedby\": \"user_avatar_help\",\n              id: \"user_avatar\",\n              type: \"file\",\n              accept: \"image/png, image/jpeg, image/jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"Save photo\",\n              type: \"submit\",\n              className: \"p-2 bg-blue-600 border border-blue-600 hover:bg-blue-800 hover:border-blue-800 transition-all rounded-md text-white flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(UploadIcon, {\n                alt: false,\n                myStyle: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfilePicModal, \"n59tFg6MRfTwxBQP0gxga8IoKP8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = ProfilePicModal;\nexport default ProfilePicModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePicModal\");","map":{"version":3,"sources":["C:/Users/sweet/Desktop/STEPuHP App Dev opp/client/src/components/dashboard/mentorDashboard/dashboardLinks/profile/profilePicModal/ProfilePicModal.js"],"names":["React","useContext","useState","useDispatch","useHistory","mentorUpdateProfilePicture","studentUpdateProfilePicture","UploadIcon","Resizer","authContext","Roles","ProfilePicModal","setHiddenProfilePicModal","setShowOverlay","nodeRef","role","image","setImage","imageToBeSent","setImageToBeSent","dispatch","history","resizeFile","file","Promise","resolve","imageFileResizer","uri","handleSubmit","event","preventDefault","formData","FormData","append","MENTOR","handleModalActions","onImageChange","target","files","URL","createObjectURL","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { mentorUpdateProfilePicture } from \"../../../../../../actions/mentor\";\nimport { studentUpdateProfilePicture } from \"../../../../../../actions/student\";\nimport UploadIcon from \"../../../../../../assets/icons/UploadIcon\";\n\nimport Resizer from \"react-image-file-resizer\";\nimport { authContext } from \"../../../../../../contexts/authContext\";\nimport { Roles } from \"../../../../../../utility\";\n\nconst ProfilePicModal = ({ setHiddenProfilePicModal, setShowOverlay, nodeRef }) => {\n    // getting role of the logged in user\n    const { role } = useContext(authContext);\n\n    // state to set the image to be displayed\n    const [image, setImage] = useState(null);\n    // state to store the selected image data to be sent to save\n    const [imageToBeSent, setImageToBeSent] = useState(null);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // function to resize image\n    const resizeFile = (file) =>\n        new Promise((resolve) => {\n            Resizer.imageFileResizer(\n                file, // Is the file of the image which will resized.\n                200, //Is the maxWidth of the resized new image.\n                200, // Is the maxHeight of the resized new image.\n                \"JPEG\", // Is the compressFormat of the resized new image. (JPEG, PNG or WEBP)\n                90, // Is the quality of the resized new image. (0-100)\n                0, // Is the degree of clockwise rotation. (0, 90, 180, 270, 360)\n                (uri) => resolve(uri), // Is the callBack function of the resized new image URI.\n                \"file\" // Is the output type of the resized new image. (file, base64 or blob)\n            );\n        });\n\n    // function to handle the image submit\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append(\"avatar\", imageToBeSent);\n        if (role === Roles.MENTOR) {\n            dispatch(mentorUpdateProfilePicture(history, formData));\n        } else {\n            dispatch(studentUpdateProfilePicture(history, formData));\n        }\n        handleModalActions();\n    };\n\n    // async function to set the image data for the newly selected image\n    const onImageChange = async (event) => {\n        if (event.target.files && event.target.files[0]) {\n            setImage(URL.createObjectURL(event.target.files[0]));\n            const file = event.target.files[0];\n            const image = await resizeFile(file);\n            console.log(file, image);\n            setImageToBeSent(image);\n        }\n    };\n\n    // function to set the modal state to hide\n    const handleModalActions = () => {\n        setHiddenProfilePicModal(false);\n        setShowOverlay(false);\n    };\n\n    return (\n        <>\n            <div className=\"w-full h-full bg-transparent absolute top-0 left-0 flex items-center justify-center\">\n                <div ref={nodeRef} className=\"overflow-y-auto z-50 p-6 bg-white rounded-md\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                        <h4 className=\"mr-5\">Update profile photo</h4>\n                        <button onClick={handleModalActions} className=\"text-2xl\">\n                            &times;\n                        </button>\n                    </div>\n\n                    <div className=\"w-full flex items-center justify-center mb-5\">\n                        <img\n                            className=\"w-32 h-32 rounded-md border border-gray-900\"\n                            src={image}\n                            alt=\"Not selected\"\n                        />\n                    </div>\n\n                    <label\n                        className=\"text-sm font-medium text-gray-900 block mb-2\"\n                        htmlFor=\"user_avatar\"\n                    >\n                        Upload a file (supported - png/jpeg)\n                    </label>\n                    <form encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n                        <div className=\"flex items-center w-full justify-between gap-x-3\">\n                            <input\n                                onChange={onImageChange}\n                                className=\"block w-full cursor-pointer bg-gray-50 border border-gray-300 text-gray-900 focus:outline-none focus:border-transparent text-sm rounded-lg\"\n                                aria-describedby=\"user_avatar_help\"\n                                id=\"user_avatar\"\n                                type=\"file\"\n                                accept=\"image/png, image/jpeg, image/jpg\"\n                            />\n                            <button\n                                title=\"Save photo\"\n                                type=\"submit\"\n                                className=\"p-2 bg-blue-600 border border-blue-600 hover:bg-blue-800 hover:border-blue-800 transition-all rounded-md text-white flex items-center justify-center\"\n                            >\n                                <UploadIcon alt={false} myStyle={\"h-5 w-5\"} />\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProfilePicModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\STEPuHP App\\\\client\\\\src\\\\components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = ({\n  location\n}) => {\n  _s();\n\n  // state variables declaration\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [fields, setFields] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    enrollmentNo: \"\",\n    semester: \"\",\n    department: \"\"\n  });\n  const dispatch = useDispatch();\n  const history = useHistory(); // using useEffect to prevent user from coming to auth through url\n\n  useEffect(() => {\n    if (location.state === undefined) {\n      history.goBack();\n    }\n  }, [location.state, history]); // functions to control the form\n\n  const resetFields = () => {\n    // this function is used to reset the form fields\n    setFields({\n      firstName: \"\",\n      lastName: \"\",\n      middleName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      enrollmentNo: \"\",\n      semester: \"\",\n      department: \"\"\n    });\n  };\n\n  const handleToggle = () => {\n    // this function is used to toggle between signin and signup\n    setToggleLogin(prevToggle => !prevToggle);\n    resetFields();\n  };\n\n  const handleChange = e => {\n    // this function is used to set the new form field values\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"semester\" && value === \"\") return;\n    setFields(prevFields => ({ ...prevFields,\n      [name]: value.trim()\n    }));\n  };\n\n  const handleSubmit = e => {\n    // this function is used to handle the form submission\n    e.preventDefault(); // Ensure the recaptcha is checked if not logging in\n\n    if (!toggleLogin && recaptcha) return; // Process based on user type\n\n    if (location.state === \"Admin\") {\n      // Sign in the admin\n      dispatch(adminSignIn(fields, history));\n    } else if (location.state === \"Mentor\") {\n      if (toggleLogin) {\n        // Validate passwords match for sign up\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n          return;\n        } // Sign up mentor\n\n\n        dispatch(mentorSignUp(fields, handleToggle));\n      } else {\n        // Sign in mentor\n        dispatch(mentorSignIn(fields, history));\n      }\n    } else if (location.state === \"Mentee\") {\n      if (toggleLogin) {\n        // Validate passwords match for sign up\n        if (fields.password !== fields.confirmPassword) {\n          showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n          return;\n        } // Sign up mentee\n\n\n        dispatch(studentSignUp(fields, handleToggle));\n      } else {\n        // Sign in mentee\n        dispatch(studentSignIn(fields, history));\n      }\n    }\n\n    resetFields();\n  }; // State for the login button dependent on recaptcha\n\n\n  const [recaptcha, setRecaptcha] = useState(true); // Function to handle captcha change\n\n  const handleCaptchaChange = val => {\n    dispatch(verifyRecaptcha(val, setRecaptcha));\n  }; // State to show and hide password\n\n\n  const [showPass, setShowPass] = useState(\"password\"); // State for forgot password email\n\n  const [FPEmail, setFPEmail] = useState({\n    role: location.state,\n    email: \"\"\n  }); // Function to toggle show password state\n\n  const handlePasswordShowToggle = () => {\n    setShowPass(prevPass => prevPass === \"password\" ? \"text\" : \"password\");\n  }; // States for modal\n\n\n  const [showModal, setShowModal] = useState(false);\n  const modalRef = useRef(null);\n  const overlayRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: overlayRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"overlay\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        nodeRef: overlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: modalRef,\n      in: showModal,\n      timeout: 300,\n      classNames: \"modal\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n        nodeRef: modalRef,\n        setShowModal: setShowModal,\n        setFPEmail: setFPEmail,\n        FPEmail: FPEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-3 bg-white h-full flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: \"50px\"\n          },\n          className: \"w-full text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-500\",\n            children: location.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), \" \", toggleLogin ? \"Sign Up\" : \"Sign In\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginBg,\n        alt: \"Login Background\",\n        className: \"w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-2 bg-gray-600 h-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                className: \"mb-2 text-white\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"firstName\",\n                name: \"firstName\",\n                type: \"text\",\n                value: fields.firstName,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-md border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"middleName\",\n                className: \"mb-2 text-white\",\n                children: \"Middle name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"middleName\",\n                name: \"middleName\",\n                type: \"text\",\n                value: fields.middleName,\n                onChange: handleChange,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                className: \"mb-2 text-white\",\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"lastName\",\n                name: \"lastName\",\n                type: \"text\",\n                value: fields.lastName,\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), toggleLogin && location.state === \"Mentee\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"enrollmentNo\",\n                className: \"mb-2 text-white\",\n                children: \"Enrollment No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"enrollmentNo\",\n                name: \"enrollmentNo\",\n                type: \"text\",\n                value: fields.enrollmentNo.toUpperCase(),\n                onChange: handleChange,\n                required: true,\n                className: \"rounded-lg border-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"semester\",\n                className: \"mb-2 text-white\",\n                children: \"Semester\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"semester\",\n                name: \"semester\",\n                className: \"rounded-lg border-none\",\n                value: fields.semester,\n                onChange: handleChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1st semester\",\n                  children: \"1st semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2nd semester\",\n                  children: \"2nd semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3rd semester\",\n                  children: \"3rd semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4th semester\",\n                  children: \"4th semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5th semester\",\n                  children: \"5th semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6th semester\",\n                  children: \"6th semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"7th semester\",\n                  children: \"7th semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"8th semester\",\n                  children: \"8th semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"mb-2 text-white\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: fields.email,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-md border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"mb-2 text-white\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: showPass,\n              value: fields.password,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-md border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handlePasswordShowToggle,\n              className: \"text-white\",\n              children: [showPass === \"password\" ? \"Show\" : \"Hide\", \" Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              className: \"mb-2 text-white\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              value: fields.confirmPassword,\n              onChange: handleChange,\n              required: true,\n              className: \"rounded-md border-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), !toggleLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-4\",\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: \"rememberMe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 46\n              }, this),\n              label: \"Remember Me\",\n              className: \"text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"text-white\",\n              onClick: () => setShowModal(true),\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n            sitekey: process.env.REACT_APP_RECAPTCHA_SITE_KEY,\n            onChange: handleCaptchaChange,\n            className: \"mb-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white rounded-md px-4 py-2\",\n              children: [toggleLogin ? \"Sign Up\" : \"Sign In\", /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-white\",\n          onClick: handleToggle,\n          children: toggleLogin ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"ndNUPTTnEoDaCEnVwUlWH6IKcWI=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/STEPuHP App/client/src/components/auth/Auth.js"],"names":["React","useState","useEffect","useRef","useDispatch","useHistory","adminSignIn","mentorSignIn","mentorSignUp","studentSignIn","studentSignUp","ArrowRight","loginBg","ReCAPTCHA","toast","ToastContainer","showToast","Checkbox","FormControlLabel","CSSTransition","ModalOverlay","ForgotPasswordModal","verifyRecaptcha","Auth","location","toggleLogin","setToggleLogin","fields","setFields","firstName","lastName","middleName","email","password","confirmPassword","enrollmentNo","semester","department","dispatch","history","state","undefined","goBack","resetFields","handleToggle","prevToggle","handleChange","e","name","value","target","prevFields","trim","handleSubmit","preventDefault","recaptcha","POSITION","TOP_RIGHT","setRecaptcha","handleCaptchaChange","val","showPass","setShowPass","FPEmail","setFPEmail","role","handlePasswordShowToggle","prevPass","showModal","setShowModal","modalRef","overlayRef","fontSize","toUpperCase","process","env","REACT_APP_RECAPTCHA_SITE_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,sBAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,uBAA7C;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,eAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC;AACjC4B,IAAAA,SAAS,EAAE,EADsB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,UAAU,EAAE,EAHqB;AAIjCC,IAAAA,KAAK,EAAE,EAJ0B;AAKjCC,IAAAA,QAAQ,EAAE,EALuB;AAMjCC,IAAAA,eAAe,EAAE,EANgB;AAOjCC,IAAAA,YAAY,EAAE,EAPmB;AAQjCC,IAAAA,QAAQ,EAAE,EARuB;AASjCC,IAAAA,UAAU,EAAE;AATqB,GAAD,CAApC;AAWA,QAAMC,QAAQ,GAAGlC,WAAW,EAA5B;AACA,QAAMmC,OAAO,GAAGlC,UAAU,EAA1B,CAf2B,CAiB3B;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,QAAQ,CAACgB,KAAT,KAAmBC,SAAvB,EAAkC;AAC9BF,MAAAA,OAAO,CAACG,MAAR;AACH;AACJ,GAJQ,EAIN,CAAClB,QAAQ,CAACgB,KAAV,EAAiBD,OAAjB,CAJM,CAAT,CAlB2B,CAwB3B;;AACA,QAAMI,WAAW,GAAG,MAAM;AACtB;AACAf,IAAAA,SAAS,CAAC;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,eAAe,EAAE,EANX;AAONC,MAAAA,YAAY,EAAE,EAPR;AAQNC,MAAAA,QAAQ,EAAE,EARJ;AASNC,MAAAA,UAAU,EAAE;AATN,KAAD,CAAT;AAWH,GAbD;;AAeA,QAAMO,YAAY,GAAG,MAAM;AACvB;AACAlB,IAAAA,cAAc,CAAEmB,UAAD,IAAgB,CAACA,UAAlB,CAAd;AACAF,IAAAA,WAAW;AACd,GAJD;;AAMA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACA,QAAIF,IAAI,KAAK,UAAT,IAAuBC,KAAK,KAAK,EAArC,EAAyC;AACzCrB,IAAAA,SAAS,CAAEuB,UAAD,KAAiB,EAAE,GAAGA,UAAL;AAAiB,OAACH,IAAD,GAAQC,KAAK,CAACG,IAAN;AAAzB,KAAjB,CAAD,CAAT;AACH,GALD;;AAOA,QAAMC,YAAY,GAAIN,CAAD,IAAO;AACxB;AACAA,IAAAA,CAAC,CAACO,cAAF,GAFwB,CAIxB;;AACA,QAAI,CAAC7B,WAAD,IAAgB8B,SAApB,EAA+B,OALP,CAOxB;;AACA,QAAI/B,QAAQ,CAACgB,KAAT,KAAmB,OAAvB,EAAgC;AAC5B;AACAF,MAAAA,QAAQ,CAAChC,WAAW,CAACqB,MAAD,EAASY,OAAT,CAAZ,CAAR;AACH,KAHD,MAGO,IAAIf,QAAQ,CAACgB,KAAT,KAAmB,QAAvB,EAAiC;AACpC,UAAIf,WAAJ,EAAiB;AACb;AACA,YAAIE,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,eAA/B,EAAgD;AAC5ClB,UAAAA,SAAS,CAAC,OAAD,EAAU,uBAAV,EAAmC,IAAnC,EAAyCF,KAAK,CAAC0C,QAAN,CAAeC,SAAxD,CAAT;AACA;AACH,SALY,CAMb;;;AACAnB,QAAAA,QAAQ,CAAC9B,YAAY,CAACmB,MAAD,EAASiB,YAAT,CAAb,CAAR;AACH,OARD,MAQO;AACH;AACAN,QAAAA,QAAQ,CAAC/B,YAAY,CAACoB,MAAD,EAASY,OAAT,CAAb,CAAR;AACH;AACJ,KAbM,MAaA,IAAIf,QAAQ,CAACgB,KAAT,KAAmB,QAAvB,EAAiC;AACpC,UAAIf,WAAJ,EAAiB;AACb;AACA,YAAIE,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,eAA/B,EAAgD;AAC5ClB,UAAAA,SAAS,CAAC,OAAD,EAAU,uBAAV,EAAmC,IAAnC,EAAyCF,KAAK,CAAC0C,QAAN,CAAeC,SAAxD,CAAT;AACA;AACH,SALY,CAMb;;;AACAnB,QAAAA,QAAQ,CAAC5B,aAAa,CAACiB,MAAD,EAASiB,YAAT,CAAd,CAAR;AACH,OARD,MAQO;AACH;AACAN,QAAAA,QAAQ,CAAC7B,aAAa,CAACkB,MAAD,EAASY,OAAT,CAAd,CAAR;AACH;AACJ;;AACDI,IAAAA,WAAW;AACd,GAvCD,CArD2B,CA8F3B;;;AACA,QAAM,CAACY,SAAD,EAAYG,YAAZ,IAA4BzD,QAAQ,CAAC,IAAD,CAA1C,CA/F2B,CAiG3B;;AACA,QAAM0D,mBAAmB,GAAIC,GAAD,IAAS;AACjCtB,IAAAA,QAAQ,CAAChB,eAAe,CAACsC,GAAD,EAAMF,YAAN,CAAhB,CAAR;AACH,GAFD,CAlG2B,CAsG3B;;;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B7D,QAAQ,CAAC,UAAD,CAAxC,CAvG2B,CAyG3B;;AACA,QAAM,CAAC8D,OAAD,EAAUC,UAAV,IAAwB/D,QAAQ,CAAC;AACnCgE,IAAAA,IAAI,EAAEzC,QAAQ,CAACgB,KADoB;AAEnCR,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAAtC,CA1G2B,CA+G3B;;AACA,QAAMkC,wBAAwB,GAAG,MAAM;AACnCJ,IAAAA,WAAW,CAAEK,QAAD,IAAeA,QAAQ,KAAK,UAAb,GAA0B,MAA1B,GAAmC,UAAnD,CAAX;AACH,GAFD,CAhH2B,CAoH3B;;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpE,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMqE,QAAQ,GAAGnE,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMoE,UAAU,GAAGpE,MAAM,CAAC,IAAD,CAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,OAAO,EAAEoE,UADb;AAEI,MAAA,EAAE,EAAEH,SAFR;AAGI,MAAA,OAAO,EAAE,GAHb;AAII,MAAA,UAAU,EAAC,SAJf;AAKI,MAAA,aAAa,MALjB;AAAA,6BAOI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,aAAD;AACI,MAAA,OAAO,EAAED,QADb;AAEI,MAAA,EAAE,EAAEF,SAFR;AAGI,MAAA,OAAO,EAAE,GAHb;AAII,MAAA,UAAU,EAAC,OAJf;AAKI,MAAA,aAAa,MALjB;AAAA,6BAOI,QAAC,mBAAD;AACI,QAAA,OAAO,EAAEE,QADb;AAEI,QAAA,YAAY,EAAED,YAFlB;AAGI,QAAA,UAAU,EAAEL,UAHhB;AAII,QAAA,OAAO,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAwBI;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAAES,YAAAA,QAAQ,EAAE;AAAZ,WAAX;AAAiC,UAAA,SAAS,EAAC,oBAA3C;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,sBAAiChD,QAAQ,CAACgB;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC4D,GAD5D,EAEKf,WAAW,GAAG,SAAH,GAAe,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,GAAG,EAAEb,OAAV;AAAmB,QAAA,GAAG,EAAC,kBAAvB;AAA0C,QAAA,SAAS,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAiCI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAM,UAAA,QAAQ,EAAEyC,YAAhB;AAAA,qBACK5B,WAAW,iBACR;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,WAAf;AAA2B,gBAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,EAAE,EAAC,WADP;AAEI,gBAAA,IAAI,EAAC,WAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,EAAEE,MAAM,CAACE,SAJlB;AAKI,gBAAA,QAAQ,EAAEiB,YALd;AAMI,gBAAA,QAAQ,MANZ;AAOI,gBAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAaI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,YAAf;AAA4B,gBAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,EAAE,EAAC,YADP;AAEI,gBAAA,IAAI,EAAC,YAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,EAAEnB,MAAM,CAACI,UAJlB;AAKI,gBAAA,QAAQ,EAAEe,YALd;AAMI,gBAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAwBI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,UAAf;AAA0B,gBAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,EAAE,EAAC,UADP;AAEI,gBAAA,IAAI,EAAC,UAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,EAAEnB,MAAM,CAACG,QAJlB;AAKI,gBAAA,QAAQ,EAAEgB,YALd;AAMI,gBAAA,QAAQ,MANZ;AAOI,gBAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,EAwCKrB,WAAW,IAAID,QAAQ,CAACgB,KAAT,KAAmB,QAAlC,iBACG;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,cAAf;AAA8B,gBAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,EAAE,EAAC,cADP;AAEI,gBAAA,IAAI,EAAC,cAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,EAAEb,MAAM,CAACQ,YAAP,CAAoBsC,WAApB,EAJX;AAKI,gBAAA,QAAQ,EAAE3B,YALd;AAMI,gBAAA,QAAQ,MANZ;AAOI,gBAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAaI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,UAAf;AAA0B,gBAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,EAAE,EAAC,UADP;AAEI,gBAAA,IAAI,EAAC,UAFT;AAGI,gBAAA,SAAS,EAAC,wBAHd;AAII,gBAAA,KAAK,EAAEnB,MAAM,CAACS,QAJlB;AAKI,gBAAA,QAAQ,EAAEU,YALd;AAMI,gBAAA,QAAQ,MANZ;AAAA,wCAQI;AAAQ,kBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,eASI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAUI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAWI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ,eAYI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,eAaI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbJ,eAcI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ,eAeI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfJ,eAgBI;AAAQ,kBAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzCR,eA6EI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,OAAf;AAAuB,cAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,EAAE,EAAC,OADP;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,KAAK,EAAEnB,MAAM,CAACK,KAJlB;AAKI,cAAA,QAAQ,EAAEc,YALd;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7EJ,eAyFI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAA0B,cAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,EAAE,EAAC,UADP;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,IAAI,EAAEe,QAHV;AAII,cAAA,KAAK,EAAElC,MAAM,CAACM,QAJlB;AAKI,cAAA,QAAQ,EAAEa,YALd;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAWI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEoB,wBAA/B;AAAyD,cAAA,SAAS,EAAC,YAAnE;AAAA,yBACKL,QAAQ,KAAK,UAAb,GAA0B,MAA1B,GAAmC,MADxC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzFJ,EAwGKpC,WAAW,iBACR;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAiC,cAAA,SAAS,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,EAAE,EAAC,iBADP;AAEI,cAAA,IAAI,EAAC,iBAFT;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,KAAK,EAAEE,MAAM,CAACO,eAJlB;AAKI,cAAA,QAAQ,EAAEY,YALd;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzGR,EAsHK,CAACrB,WAAD,iBACG;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI,QAAC,gBAAD;AACI,cAAA,OAAO,eAAE,QAAC,QAAD;AAAU,gBAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADb;AAEI,cAAA,KAAK,EAAC,aAFV;AAGI,cAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvHR,eA+HI;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,SAAS,EAAC,YAFd;AAGI,cAAA,OAAO,EAAE,MAAM4C,YAAY,CAAC,IAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA/HJ,eAwII,QAAC,SAAD;AACI,YAAA,OAAO,EAAEK,OAAO,CAACC,GAAR,CAAYC,4BADzB;AAEI,YAAA,QAAQ,EAAEjB,mBAFd;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBAxIJ,eA6II;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,6CAAhC;AAAA,yBACKlC,WAAW,GAAG,SAAH,GAAe,SAD/B,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA7IJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqJI;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,OAAO,EAAEmB,YAFb;AAAA,oBAIKnB,WAAW,GAAG,kCAAH,GAAwC;AAJxD;AAAA;AAAA;AAAA;AAAA,gBArJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjCJ,eA+LI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YA/LJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmMH,CA5TD;;GAAMF,I;UAcenB,W,EACDC,U;;;KAfdkB,I;AA8TN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { adminSignIn } from \"../../actions/admin\";\nimport { mentorSignIn, mentorSignUp } from \"../../actions/mentor\";\nimport { studentSignIn, studentSignUp } from \"../../actions/student\";\nimport ArrowRight from \"../../assets/icons/ArrowRight\";\nimport loginBg from \"../../assets/images/login.png\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../toast/toast\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalOverlay from \"../modal/ModalOverlay\";\nimport ForgotPasswordModal from \"./ForgotPasswordModal\";\nimport { verifyRecaptcha } from \"../../actions\";\n\nconst Auth = ({ location }) => {\n    // state variables declaration\n    const [toggleLogin, setToggleLogin] = useState(false);\n    const [fields, setFields] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        enrollmentNo: \"\",\n        semester: \"\",\n        department: \"\",\n    });\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // using useEffect to prevent user from coming to auth through url\n    useEffect(() => {\n        if (location.state === undefined) {\n            history.goBack();\n        }\n    }, [location.state, history]);\n\n    // functions to control the form\n    const resetFields = () => {\n        // this function is used to reset the form fields\n        setFields({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            enrollmentNo: \"\",\n            semester: \"\",\n            department: \"\",\n        });\n    };\n\n    const handleToggle = () => {\n        // this function is used to toggle between signin and signup\n        setToggleLogin((prevToggle) => !prevToggle);\n        resetFields();\n    };\n\n    const handleChange = (e) => {\n        // this function is used to set the new form field values\n        const { name, value } = e.target;\n        if (name === \"semester\" && value === \"\") return;\n        setFields((prevFields) => ({ ...prevFields, [name]: value.trim() }));\n    };\n\n    const handleSubmit = (e) => {\n        // this function is used to handle the form submission\n        e.preventDefault();\n\n        // Ensure the recaptcha is checked if not logging in\n        if (!toggleLogin && recaptcha) return;\n\n        // Process based on user type\n        if (location.state === \"Admin\") {\n            // Sign in the admin\n            dispatch(adminSignIn(fields, history));\n        } else if (location.state === \"Mentor\") {\n            if (toggleLogin) {\n                // Validate passwords match for sign up\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                // Sign up mentor\n                dispatch(mentorSignUp(fields, handleToggle));\n            } else {\n                // Sign in mentor\n                dispatch(mentorSignIn(fields, history));\n            }\n        } else if (location.state === \"Mentee\") {\n            if (toggleLogin) {\n                // Validate passwords match for sign up\n                if (fields.password !== fields.confirmPassword) {\n                    showToast(\"error\", \"Passwords don't match\", 5000, toast.POSITION.TOP_RIGHT);\n                    return;\n                }\n                // Sign up mentee\n                dispatch(studentSignUp(fields, handleToggle));\n            } else {\n                // Sign in mentee\n                dispatch(studentSignIn(fields, history));\n            }\n        }\n        resetFields();\n    };\n\n    // State for the login button dependent on recaptcha\n    const [recaptcha, setRecaptcha] = useState(true);\n\n    // Function to handle captcha change\n    const handleCaptchaChange = (val) => {\n        dispatch(verifyRecaptcha(val, setRecaptcha));\n    };\n\n    // State to show and hide password\n    const [showPass, setShowPass] = useState(\"password\");\n    \n    // State for forgot password email\n    const [FPEmail, setFPEmail] = useState({\n        role: location.state,\n        email: \"\",\n    });\n\n    // Function to toggle show password state\n    const handlePasswordShowToggle = () => {\n        setShowPass((prevPass) => (prevPass === \"password\" ? \"text\" : \"password\"));\n    };\n\n    // States for modal\n    const [showModal, setShowModal] = useState(false);\n    const modalRef = useRef(null);\n    const overlayRef = useRef(null);\n\n    return (\n        <div className=\"w-full h-screen flex items-center\">\n            <CSSTransition\n                nodeRef={overlayRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"overlay\"\n                unmountOnExit\n            >\n                <ModalOverlay nodeRef={overlayRef} />\n            </CSSTransition>\n            <CSSTransition\n                nodeRef={modalRef}\n                in={showModal}\n                timeout={300}\n                classNames=\"modal\"\n                unmountOnExit\n            >\n                <ForgotPasswordModal\n                    nodeRef={modalRef}\n                    setShowModal={setShowModal}\n                    setFPEmail={setFPEmail}\n                    FPEmail={FPEmail}\n                />\n            </CSSTransition>\n            <div className=\"flex-3 bg-white h-full flex flex-col items-center justify-center\">\n                <div className=\"w-full\">\n                    <h1 style={{ fontSize: \"50px\" }} className=\"w-full text-center\">\n                        <span className=\"text-blue-500\">{location.state}</span>{\" \"}\n                        {toggleLogin ? \"Sign Up\" : \"Sign In\"}\n                    </h1>\n                </div>\n                <img src={loginBg} alt=\"Login Background\" className=\"w-1/2\" />\n            </div>\n            <div className=\"flex-2 bg-gray-600 h-full flex items-center justify-center\">\n                <div className=\"w-96\">\n                    <form onSubmit={handleSubmit}>\n                        {toggleLogin && (\n                            <div className=\"grid grid-cols-3 gap-2\">\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"firstName\" className=\"mb-2 text-white\">First name</label>\n                                    <input\n                                        id=\"firstName\"\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        value={fields.firstName}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-md border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"middleName\" className=\"mb-2 text-white\">Middle name</label>\n                                    <input\n                                        id=\"middleName\"\n                                        name=\"middleName\"\n                                        type=\"text\"\n                                        value={fields.middleName}\n                                        onChange={handleChange}\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"lastName\" className=\"mb-2 text-white\">Last name</label>\n                                    <input\n                                        id=\"lastName\"\n                                        name=\"lastName\"\n                                        type=\"text\"\n                                        value={fields.lastName}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        {toggleLogin && location.state === \"Mentee\" && (\n                            <div className=\"grid grid-cols-2 gap-2\">\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"enrollmentNo\" className=\"mb-2 text-white\">Enrollment No.</label>\n                                    <input\n                                        id=\"enrollmentNo\"\n                                        name=\"enrollmentNo\"\n                                        type=\"text\"\n                                        value={fields.enrollmentNo.toUpperCase()}\n                                        onChange={handleChange}\n                                        required\n                                        className=\"rounded-lg border-none\"\n                                    />\n                                </div>\n                                <div className=\"flex flex-col mb-6\">\n                                    <label htmlFor=\"semester\" className=\"mb-2 text-white\">Semester</label>\n                                    <select\n                                        id=\"semester\"\n                                        name=\"semester\"\n                                        className=\"rounded-lg border-none\"\n                                        value={fields.semester}\n                                        onChange={handleChange}\n                                        required\n                                    >\n                                        <option value=\"\">Select semester</option>\n                                        <option value=\"1st semester\">1st semester</option>\n                                        <option value=\"2nd semester\">2nd semester</option>\n                                        <option value=\"3rd semester\">3rd semester</option>\n                                        <option value=\"4th semester\">4th semester</option>\n                                        <option value=\"5th semester\">5th semester</option>\n                                        <option value=\"6th semester\">6th semester</option>\n                                        <option value=\"7th semester\">7th semester</option>\n                                        <option value=\"8th semester\">8th semester</option>\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"email\" className=\"mb-2 text-white\">Email</label>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                value={fields.email}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-md border-none\"\n                            />\n                        </div>\n                        <div className=\"flex flex-col mb-6\">\n                            <label htmlFor=\"password\" className=\"mb-2 text-white\">Password</label>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type={showPass}\n                                value={fields.password}\n                                onChange={handleChange}\n                                required\n                                className=\"rounded-md border-none\"\n                            />\n                            <button type=\"button\" onClick={handlePasswordShowToggle} className=\"text-white\">\n                                {showPass === \"password\" ? \"Show\" : \"Hide\"} Password\n                            </button>\n                        </div>\n                        {toggleLogin && (\n                            <div className=\"flex flex-col mb-6\">\n                                <label htmlFor=\"confirmPassword\" className=\"mb-2 text-white\">Confirm Password</label>\n                                <input\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    type=\"password\"\n                                    value={fields.confirmPassword}\n                                    onChange={handleChange}\n                                    required\n                                    className=\"rounded-md border-none\"\n                                />\n                            </div>\n                        )}\n                        {!toggleLogin && (\n                            <div className=\"flex mb-4\">\n                                <FormControlLabel\n                                    control={<Checkbox name=\"rememberMe\" />}\n                                    label=\"Remember Me\"\n                                    className=\"text-white\"\n                                />\n                            </div>\n                        )}\n                        <div className=\"flex justify-between mb-4\">\n                            <button\n                                type=\"button\"\n                                className=\"text-white\"\n                                onClick={() => setShowModal(true)}\n                            >\n                                Forgot Password?\n                            </button>\n                        </div>\n                        <ReCAPTCHA\n                            sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n                            onChange={handleCaptchaChange}\n                            className=\"mb-6\"\n                        />\n                        <div className=\"flex flex-col mb-4\">\n                            <button type=\"submit\" className=\"bg-blue-500 text-white rounded-md px-4 py-2\">\n                                {toggleLogin ? \"Sign Up\" : \"Sign In\"}\n                                <ArrowRight />\n                            </button>\n                        </div>\n                    </form>\n                    <button\n                        className=\"text-white\"\n                        onClick={handleToggle}\n                    >\n                        {toggleLogin ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\"}\n                    </button>\n                </div>\n            </div>\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}